#!/bin/sh

while [ $# -gt 0 ] ; do
	echo "arg = $1"
	case $1 in

	-d)
		DEBUG="T";
		shift ;;
	*)
		#catch all for unknown arguments
		echo ""
		echo "!!! ERROR !!! - Unknown argument $1"
		echo ""
		exit 1
		;;
	esac
done

#LD_LIBRARY_PATH needs to be set (empty) so that epa can swap between the original and the bundled version
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}

export PREBUNDLE_ENV="$(env)"

BIN_DIR=$(dirname $(readlink -f $0))
INSTALL_DIR=$(dirname $BIN_DIR)
LIB_DIR=$INSTALL_DIR/lib
ETC_DIR=$INSTALL_DIR/etc
USER_ARDOUR_DIR=$HOME/.config/ardour3

if [ ! -d $USER_ARDOUR_DIR ] ; then
    mkdir -p $USER_ARDOUR_DIR || exit 1
fi

# this triggers code in main() that will reset runtime environment variables
# to point to directories inside the ardour package

export ARDOUR_BUNDLED=true

# this is edited by the build script to include relevant environment variables

%ENV%

export GTK_PATH=$INSTALL_DIR${GTK_PATH:+:$GTK_PATH}
export GTK_MODULES=""		# Disable extra modules from being loaded by gtk (example, libcanberra-gtk-module.so)
export LD_LIBRARY_PATH=$INSTALL_DIR/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}

# create install-location-dependent config files for Pango and GDK image loaders
# We have to do this every time because its possible that BIN_DIR has changed

sed "s?@ROOTDIR@/modules?$LIB_DIR/modules?" < $ETC_DIR/pango.modules.in > $USER_ARDOUR_DIR/pango.modules
sed "s?@ROOTDIR@/loaders?$LIB_DIR/loaders?" < $ETC_DIR/gdk-pixbuf.loaders.in > $USER_ARDOUR_DIR/gdk-pixbuf.loaders

if [ "T" = "$DEBUG" ]; then
	export ARDOUR_INSIDE_GDB=1
	exec gdb $INSTALL_DIR/bin/ardour-3.0 "$@"
else
	exec $INSTALL_DIR/bin/ardour-3.0 "$@"
fi



