ACLOCAL_AMFLAGS	= -I scripts

SUBDIRS		= tools glib gio scripts
DIST_SUBDIRS	= $(SUBDIRS)

EXTRA_DIST	= build_shared/Makefile_build.am_fragment \
		  build_shared/Makefile_build_gensrc.am_fragment \
		  build_shared/Makefile_gensrc.am_fragment \
		  build_shared/Makefile_conditional.am_fragment \
		  README.win32 \
                  COPYING COPYING.tools


all-local:
	@echo "*** Everything completed ***"

dist-hook:
	@echo; echo; \
	echo "**********************************************************"; \
	echo "* IMPORTANT NOTICE:                                      *"; \
	echo "*                                                        *"; \
	echo "* Be sure you have done a complete build before running  *"; \
	echo "* 'make dist' or 'make distcheck', because otherwise     *"; \
	echo "* the tarball will _not_ contain the dependency rules    *"; \
	echo "* generated by the compiler.                             *"; \
	echo "**********************************************************"; \
	echo; echo


SVN_REV=`svnversion -n`
URL_KEY=URL:
SVN_PATH=`svn info |grep "$(URL_KEY)" |sed -e "s/$(URL_KEY)\s*//"`
ROOT_KEY=Repository Root:
SVN_ROOT=`svn info |grep "$(ROOT_KEY)" |sed -e "s/$(ROOT_KEY)\s*//"`

tag-release: distcheck
	@svn cp -r$(SVN_REV) -m "tag $(PACKAGE) $(VERSION)" $(SVN_PATH) $(SVN_ROOT)/tags/$(PACKAGE)-$(VERSION) \
		|| (echo "Tagging failed.  Do you have local changes that are not committed?" \
		&& echo "Try running 'svn update'." && false)
	@echo "Release Tagged."

upload-release: tag-release
	scp $(DIST_ARCHIVES) master.gnome.org:
	@echo "Tarball uploaded.  Now run install-module on master.gnome.org"
	@echo "[hint: make install-module]"

RELEASE_ANNOUNCE_LIST = gnome-announce-list@gnome.org, gtkmm-list@gnome.org
release-announce:
	@echo "Please send the following announcement to:"
	@echo "$(RELEASE_ANNOUNCE_LIST)"
	@echo ""
	@echo "Subject: ANNOUNCE: $(PACKAGE) $(VERSION) released"
	@echo ""
	@echo "============================== CUT HERE =============================="
	@echo "* ABOUT $(PACKAGE) *"
	@echo ""
	@echo "  $(PACKAGE) is a C++ API for glib and gio.  It is useful on its own "
	@echo "  and is a dependency of gtkmm, the C++ API for GTK+."
	@echo ""
	@echo "  $(PACKAGE) $(GLIBMM_RELEASE) wraps new API in glib $(GLIBMM_RELEASE), including the gio library, "
	@echo "  and is API/ABI-compatibile with older versions of glibmm back to "
	@echo "  version 2.4. It is a version of the glibmm-2.4 API."
	@echo ""
	@echo "  For more information, please visit http://gtkmm.org/"
	@echo ""
	@echo "* DOWNLOAD *"
	@echo ""
	@echo "  Source packages for $(PACKAGE) (as well as API-stable bindings for the "
	@echo "  rest of the GNOME platform) can be downloaded from:"
	@echo ""
	@echo "    http://www.gtkmm.org/download.shtml"
	@echo ""
	@echo "* DEVELOPMENT *"
	@echo ""
	@echo "  There is active discussion on the mailing list: "
	@echo "  http://www.gtkmm.org/mailinglist.shtml"
	@echo "  and in the #c++ channel on irc.gnome.org"
	@echo ""
	@echo "  gtkmm and $(PACKAGE) stay in-sync with GTK+ by following the official "
	@echo "  GNOME release schedule:"
	@echo ""
	@echo "    http://www.gnome.org/start/unstable/"
	@echo ""
	@echo "* CHANGES *"
	@echo ""
	@echo "  --- INSERT NEWS HERE ---"
	@echo "============================== CUT HERE =============================="

install-module:
	ssh master.gnome.org install-module $(DIST_ARCHIVES)

release: upload-release release-announce

.PHONY: post-html post-html-local post-html-recursive release tag-release upload-release release-announce install-module

