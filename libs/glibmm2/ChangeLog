2.20.0

2009-03-15  Jonathon Jongsma  <jjongsma@gnome.org>

	* configure.in: bump rev to 2.20.0
	* NEWS: update for release

2009-03-09  Daniel Elstner  <danielk@openismus.com>

	* tools/extra_defs_gen/generate_extra_defs.cc (get_properties):
	Replace nested double quotes in the docs string by single quotes
	to ease the parsing pain of gmmproc.

2.19.8:

2009-02-23  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_enums.defs: Regenerated, adding 
	FILE_CREATE_REPLACE_DESTINATION and Error::TOO_MANY_OPEN_FILES.
	* gio/src/gio_signals.defs: Regenerated.
	* go/src/mountoperation: Added the aborted signal.

2009-02-22  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/drive.hg: Remove extra ;s on the new signalsl, to avoid 
	compiler warnings.

2.19.3

2009-02-20  Jonathon Jongsma  <jonathon@quotidian.org>

	* docs/reference/Makefile.am: fix distcheck issue

2009-02-20  Jonathon Jongsma  <jonathon@quotidian.org>

	* NEWS:
	* configure.in: update for 2.19.3 release

2009-02-17  Daniel Elstner  <danielk@openismus.com>

	* glib/glibmm/debug.h: Remove mention of G_GNUC_PRETTY_FUNCTION in
	comment because a code maintenance tool of André Klapper complained
	about it.
	* glib/glibmm/objectbase.cc: Likewise.

2009-02-06  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_methods.defs: Regenerated.

	* gio/src/filterinputstream.hg: Added get/set_close_base_stream().
	* gio/src/filteroutputstream.hg: Added get/set_close_base_stream().
	* gio/src/unixinputstream.hg: Added get_fd() and get/set_close_fd().
	* gio/src/unixoutputstream.hg: Added get_fd() and get/set_close_fd().

	* gio/src/datainputstream.[hg|ccg]: Added read_until_async(), 
	read_until_finish(), read_line_async() and read_line_finish().
	Added documentation for read_until() and read_line().

2009-02-06  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs_gio.cc: Added unix types.
	* gio/src/gio_signals.defs: Regenerated.
	* gio/src/bufferedinputstream.hg: Added buffer_size property.
	* gio/src/bufferedoutputstream.hg: Added buffer_size and auto_grow 
	properties.
	* gio/src/datainputstream.hg: Added byte_order and newline_type 
	properties.
	* gio/src/dataoutputstream.hg: Added byte_order property.
	* gio/src/filterinputstream.hg: Added close_base_ stream property.
	* gio/src/filteroutputstream.hg:
	* gio/src/unixinputstream.hg: Added fd and close_fd properties.
	* gio/src/unixoutputstream.hg: Added fd and close_fd properties.

2009-02-05  Theppitak Karoonboonyanan  <thep@linux.thai.net>	

	* docs/reference/Doxyfile.in:
	* docs/reference/Makefile.am: Allow glibmm to build outside the source 
	tree. Bug #570216

2009-02-05  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/regex.hg: create(): For the version when 
	GLIBMM_EXCEPTIONS_ENABLED is not defined, do not specify default 
	parameter values because we have an extra error parameter.
	Bug #570648 (Bernd Buschinski)

2009-01-20  Deng Xiyue  <manphiz@gmail.com>

	* Change license header to mention Lesser General Public License
	version 2.1 instead of Library General Public License, to be
	consistent with COPYING.

2.19.2:

2009-01-19  Tao Wang  <dancefire@gmail.com>

	* glib/src/nodetree.hg: Do not use a non-ASCII dash character, to 
	avoid the MSVC++ warning C4819 with Visual Studio 2008.
	Bug #568072

2009-01-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/wrap.h: wrap_auto_interface<>(): Add a warning to give a 
	clue when the dynamic_cast fails, for instance if you are doing some 
	incorrect multiple inheritance.

2009-01-08  Daniel Elstner  <danielk@openismus.com>

	* glib/glibmm/ustring.h (ustring::compose): Add an overload which
	takes only a format string and no arguments to be substituted.  It
	is essentially a null-operation as long as the format string does
	not contain any invalid argument references.  Bug #506394.

2009-01-06  Jonathon Jongsma  <jonathon@quotidian.org>

	* glib/src/uriutils.ccg: fix a memory leak in the uri utility functions
	caused by not freeing the returned C string.  Bug #566845 (Jason Kasper)

2009-01-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg: Added implementation of the 
	make_directory_with_parents() method overload that takes no parameter.
	Bug #566003 (Philip Belemezov).

2008-12-24  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/spawn.ccg:
	* glib/src/spawn.hg: Added Glib::spawn_*() alternative API for when 
	GLIBMM_EXCEPTIONS_ENABLED is not enabled (when compiling without 
	C++ exceptions.)
	Bug #565487
	(Jonathon Jongsma)

2008-12-14  Jonathon Jongsma  <jonathon@quotidian.org>

	* NEWS: update for follow-up release

2008-12-14  Jonathon Jongsma  <jonathon@quotidian.org>

	* configure.in: bump to 2.19.1

2008-12-14  Jonathon Jongsma  <jonathon@quotidian.org>

	* gio/src/drive.hg: Wrap new signals 'changed', 'disconnected', and
	'eject_button' with the no_default_handler option so that we don't break ABI
	by adding new virtual functions

=== 2.19.0 ===

2008-12-12  Jonathon Jongsma  <jonathon@quotidian.org>

	* NEWS: update for release

2008-12-12  Jonathon Jongsma  <jonathon@quotidian.org>

	* tests/giomm_ioerror/main.cc:
	* tests/giomm_simple/main.cc: use common filenames so that people other than
	murrayc can run the tests without errors

2008-12-12  Jonathon Jongsma  <jonathon@quotidian.org>

	* gio/src/memoryoutputstream.hg: Fix a copy-paste error where I accidentally
	left a FilterOutputStream type in

2008-12-02  Jonathon Jongsma  <jonathon@quotidian.org>

	* gio/src/memoryoutputstream.ccg:
	* gio/src/memoryoutputstream.hg: Added MemoryOutputStream, but needs a bit
	of work on the constructor yet

2008-12-02  Jonathon Jongsma  <jonathon@quotidian.org>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/emblem.ccg:
	* gio/src/emblem.hg:
	* gio/src/emblemedicon.ccg:
	* gio/src/emblemedicon.hg:
	* tools/m4/convert_gio.m4: add Emblem and EmblemedIcon classes

2008-12-02  Jonathon Jongsma  <jonathon@quotidian.org>

	* tools/m4/convert_glib.m4: add a conversion for Glib::KeyFile&
	* gio/src/desktopappinfo.hg: wrap the new create_from_keyfile() function.
	In addition, I removed the _WRAP_CTOR and _WRAP_CREATE usage from the
	desktop_id constructor and wrapped all of the static create* functions using
	_WRAP_METHOD since these functions do a lot of error handling and can fail
	to create an object under some circumstances.

2008-12-02  Jonathon Jongsma  <jonathon@quotidian.org>

	* docs/reference/Makefile.am: rebuild docs when a giomm header file is
	changed (similar to how we handle glibmm)

2008-12-02  Jonathon Jongsma  <jonathon@quotidian.org>

	* gio/giomm/contenttype.cc:
	* gio/giomm/contenttype.h: add content_type_from_mime_type()

2008-12-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Wrap a bunch of new / missed API

	* gio/src/appinfo.hg:
	* gio/src/appinfo.ccg: AppInfo::get_commandline(), can_delete(), do_delete()
	(need better name?), reset_type_associations(), launch_default_for_uri()
	* gio/src/cancellable.hg: add commented-out make_pollfd() since I'm not sure
	yet whether it's useful with the C++ API or not
	* gio/src/drive.hg: Added signals 'changed', 'disconnected', and
	'eject_button'
	* gio/src/icon.hg:
	* gio/src/icon.ccg: Added Icon::create(string) and Icon::to_string()
	* gio/src/mount.hg:
	* gio/src/mount.ccg: Added Mount::guess_content_type_sync(), is_shadowed(),
	shadow(), and unshadow()

2008-12-01  Jonathon Jongsma  <jonathon@quotidian.org>

	* configure.in: bump requirement to glib 2.19.x
	* gio/src/gio_docs.xml:
	* gio/src/gio_enums.defs:
	* gio/src/gio_methods.defs:
	* gio/src/gio_signals.defs:
	* glib/src/glib_docs.xml:
	* glib/src/glib_enums.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gmodule_enums.defs:
	* glib/src/gmodule_functions.defs:
	* glib/src/gobject_enums.defs:
	* glib/src/gobject_functions.defs: update the .defs to start on 2.19.x API

2008-12-01  Jonathon Jongsma  <jonathon@quotidian.org>

	* Makefile.am: add some convenience rules for generating the .defs files

2008-09-22  Dave Foster <daf@minuslab.net>

	* glib/glibmm/main.h:
	* glib/glibmm/main.cc: Added SignalIdle::connect_once,
	SignalTimeout::connect_once, and SignalTimeout::connect_seconds_once.

2008-12-10  Przemysław Grzegorczyk  <pgrzegorczyk@gmail.com>

	* Cleaned up glib includes since in the future, only glib.h (and
	glib-object.h, etc) will be allowed to be included directly.
	Bug #563987

2008-12-01  Hubert Figuiere  <hub@figuiere.net>

	* glib/src/markup.ccg: Change the way unused variables
	are marked. Bug #562716

2008-11-29  Hubert Figuiere  <hub@figuiere.net>

	* glib/src/nodetree.hg: Fix -Wshadow warnings. Bug #555743.

2008-10-20  Jonathon Jongsma  <jonathon@quotidian.org>

	* NEWS:
	* configure.in: bump version to 2.18.1, prepare NEWS for release

2008-10-20  Jonathon Jongsma  <jonathon@quotidian.org>

	* Makefile.am: updated the release-announce template

2008-10-16  Armin Burgmeier  <armin@openismus.com>

	* glib/glibmm/ustring.h: Fixed the const char* specialization for
	Stringify<> by making the string_ member a const Glib::ustring instead
	of a const Glib::ustring&. Also enabled the char[N] specialization for
	string literals.

	* tests/glibmm_ustring_compose/main.cc: Enabled the test for the
	specialization for string literals.
	Bug #506410 (Szilárd Pfeiffer)

2008-10-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	* tools/extra_defs_gen/generate_extra_defs.cc: Modify signal and props
	generation tool to generate interface signals.

2008-10-15  Armin Burgmeier  <armin@openismus.com>

	* gio/src/fileenumerator.hg:
	* gio/src/fileenumerator.ccg: Made FileEnumerator::next_file not add
	an additional reference to the return value, because the C version
	creates a new object. Also, changed ownership of the list returned by
	FileEnumerator::next_files_finish to be deep instead of shallow. Bug
	#556387.

2008-10-09  Armin Burgmeier  <armin@openismus.com>

	* gio/src/fileinfo.hg: Rename FILE_TYPE_UNKNOWN to FILE_TYPE_NOT_KNOWN
	because the former is a #define on Windows in winbase.h, included from
	windows.h. Keep FILE_TYPE_UNKNOWN for compatibility if it is not
	already defined.

2008-10-09  Armin Burgmeier  <armin@openismus.com>

	* MSVC_Net2008/Makefile.am: Removed README from EXTRA_DIST to fix
	`make dist'.

2008-10-08  Armin Burgmeier  <armin@openismus.com>

	* MSVC_Net2005/examples/dispatcher2/dispatcher2.vcproj:
	* MSVC_Net2005/examples/dispatcher/dispatcher.vcproj:
	* MSVC_Net2005/examples/options/options.vcproj:
	* MSVC_Net2005/examples/thread/thread.vcproj:
	* MSVC_Net2005/examples/thread_pool/thread_pool.vcproj:
	* MSVC_Net2005/giomm/giomm.vcproj:
	* MSVC_Net2005/glibmm/glibmm.vcproj: Adapt to the new MSVC++ DLL
	naming convention.

	* MSVC_Net2008/: Added MSVC 2008 project files.

	* configure.in:
	* Makefile.am: Add the new files to the build.

2008-10-04  Jonathon Jongsma  <jonathon@quotidian.org>

	* gio/src/error.hg: add a workaround for the HOST_NOT_FOUND symbol
	conflicts, as suggested by Szilárd Pfeiffer in Bug #529496
	* tests/giomm_ioerror/main.cc: add a test for this

2008-09-19  Armin Burgmeier  <armin@openismus.com>

	* tools/pm/DocsParser.pm (convert_tags_to_doxygen): Keep @param and
	@throws intact, so these can be used in *_docs_override_xml. Bug
	#539891.

2008-09-22  Armin Burgmeier  <armin@arbur.net>

	* MSVC_Net2005/glibmm/glibmm.vcproj: Added uriutils.cc and nodetree.cc
	to the project.

2008-09-22  Armin Burgmeier  <armin@arbur.net>

	* MSVC_Net2005/examples/dispatcher2/dispatcher2.vcproj:
	* MSVC_Net2005/examples/dispatcher/dispatcher.vcproj:
	* MSVC_Net2005/examples/markup/markup.vcproj:
	* MSVC_Net2005/examples/options/options.vcproj:
	* MSVC_Net2005/examples/thread/thread.vcproj:
	* MSVC_Net2005/examples/thread_pool/thread_pool.vcproj:
	* MSVC_Net2005/giomm/giomm.vcproj:
	* MSVC_Net2005/glibmm/glibmm.vcproj:
	* MSVC_Net2005/tests/giomm_simple/giomm_simple.vcproj:
	* MSVC_Net2005/tests/glibmm_value/glibmm_value.vcproj: Fixed the MSVC
	build of the examples and tests if configure did not run before.

=== 2.18.0 ===

2008-09-21  Jonathon Jongsma  <jonathon@quotidian.org>

	* Makefile.am: fix a minor issue in the release target

2008-09-21  Jonathon Jongsma  <jonathon@quotidian.org>

	* NEWS: Add news for 2.18 release
	* configure.in: bump version number for release
	* Makefile.am: update release mail template slightly

2008-09-08  Murray Cumming  <murrayc@murrayc.com>

	* COPYING.tools:
	* Makefile.am: Added COPYING.tools with the GPL because the tools/*.cc 
	file is GPL. Bug #550789.

=== 2.17.3 ===

2008-09-03  Jonathon Jongsma  <jjongsma@gnome.org>

	* NEWS: update for release
	* configure.in: bump version for release

2008-08-26  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* glib/src/nodetree.hg: Implemented clone function to merge the
	constructors into that and fixed clear function the operator=
	function.
	* tests/glibmm_nodetree/main.cc: Simplified the test case.
	Bug #547901.

2008-08-27  Armin Burgmeier  <armin@arbur.net>

	* MSVC_Net2005/glibmm/glibmm.rc.in:
	* MSVC_Net2005/giomm/giomm.rc.in: Replaced #include "afxres.h" by
	#include <windows.h> which does the job equally well, and allows
	compilation with the freely available Visual Studio Express compiler.

2008-08-27  Armin Burgmeier  <armin@arbur.net>

	* glib/glibmm/ustring.cc: Only include config.h when HAVE_CONFIG_H is
	defined, to allow building glibmm with MSVC without having generated
	config.h before. The only thing config.h is used for is the
	SIZEOF_WCHAR_T define anyway, and this is not needed for a MSVC build.
	Bug #549343.

2008-08-26  Murray Cumming  <murrayc@murrayc.com>

	* tests/glibmm_nodetree/main.cc: Actually use the copy constructor (or operator=), 
	instead of just copying the pointer.

2008-08-26  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/nodetree.hg: Added an operator=() because we have a copy constructor.
	Moved some code into a private clear() method so we can reuse it.

2008-08-26  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* glib/src/nodetree.hg: Added a copy constructor. Therefore, take 
	store the data by value instead of reference, taking it by const reference.
	* tests/glibmm_nodetree/main.cc: Test the copy constructor.
	Bug #547909.

2008-08-15  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* glib/src/nodetree.hg: Fixed pointer handling problem in find_child.
	Bug #547909.

2008-08-15  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* tests/glibmm_nodetree/main.cc: Implement the C++ version of GNode test
	case.
	Bug #547889

2008-07-29  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* glib/src/nodetree.hg: Use const_cast<> in the necessary const member 
	functions instead of gobj() to fix the compilation when using these.
	Bug #546485.

2008-08-08  Armin Burgmeier  <armin@arbur.net>

	* MSVC_Net2005/: Moved from MSVC_Net2003

	* MSVC_Net2005/glibmm.sln:
	* MSVC_Net2005/glibmm/glibmm.vcproj:
	* MSVC_Net2005/examples/dispatcher/dispatcher.vcproj: Converted to
	project files for Visual Studio 2005.

	* MSVC_Net2005/glibmm/glibmm.rc.in: Removed the #include "resource.h"
	since there is no resource.h in the project, and the resource still
	seems to compile.

	* MSVC_Net2005/giomm/giomm.rc.in:
	* MSVC_Net2005/giomm/giomm.vcproj:
	* MSVC_Net2005/giomm/Makefile.am: Added giomm to the MSVC project.

	* MSVC_Net2005/tests/giomm_simple/giomm_simple.vcproj:
	* MSVC_Net2005/tests/giomm_simple/Makefile.am: Added giomm_simple to
	the MSVC project.

	* MSVC_Net2005/tests/Makefile.am:
	* MSVC_Net2005/Makefile.am:
	* Makefile.am:
	* configure.in: Adapted build files.

=== 2.17.2 ===

2008-08-06  Jonathon Jongsma  <jonathon.jongsma@collabora.co.uk>

	* NEWS: update for 2.17.2
	* configure.in: bump version

2008-08-06  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* tests/Makefile.am:
	* tests/glibmm_ustring_compose/main.cc: Added a test case.
	* glib/glibmm/ustring.h: Added a ustring::Stringify<> 
	template specialization so that ustring::compose() works with 
	const char* arguments, though it still needs to be fixed to 
	work for string literals.
	Bug #506410 (Szilárd Pfeiffer).

2008-08-06  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/nodetree.hg: Make gobject_ and data_ private, 
	to remove them from protected API. Patch from Szilárd Pfeiffer.
	Bug #546485.
	Make gobj() inline.

2008-08-04  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/propertyproxy.h: Added some API documentation 
	about the need to register a new GType when adding properties.
	Bug #523043 (Moritz Ulrich).

2008-08-02  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/glibmm_header.html_fragment: Change the Main 
	Page link to link to gtkmm.org/documentation.shtml

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/Makefile.am: Remove the mention of tree.cc here to 
	fix the build. Generated files should never be menioned there.

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/nodetree.hg: Hand-code the TraverseType enum, to add 
	a prefix to the values.
	* tests/glibmm_nodetree/main.cc: Adapted.

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/nodetree.hg: find(), find_child(), traverse(), foreach():
	Rearrange the parameters so we can have default values.
	* tests/glibmm_nodetree/main.cc: Adapted.

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/nodetree.hg: Move the TraverseFlags enum into 
	the class, and hand-code it to avoid problems with _WRAP_ENUM(). 
	* tests/glibmm_nodetree/main.cc: Adapted.
	Bug #545050 (Szilárd Pfeiffer).

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* glib/glibmm.h:
	* glib/src/Makefile_list_of_hg.am_fragment:
	* glib/src/nodetree.hg:
	* glib/src/tree.hg: Renamed to nodetree.hg
	* tests/Makefile.am:
	* tests/glibmm_tree/Makefile.am:
	* tests/glibmm_tree/main.cc: Renamed to glibmm_nodetree/

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/tree.hg: Renamed Glib::Tree to Glib::NodeTree to avoid 
	confusion with GTree, because we actually wrap GNode, but do not like 
	that name. As discussed in bug #520778.
	* tests/glibmm_tree/main.cc: Adapted.

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* Makefile.am: Build the docs at the end, after the tests, to 
	save time when testing API changes.

	* glib/src/tree.hg: Const corrections: Add const and non-const versions 
	of many methods, instead of returning non-const objects from const methods.
	find().
	Changed max_height() to get_max_height() for consistency.
	* tests/glibmm_tree/main.cc: Adapted to changed API.

2008-07-29  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* glib/src/tree.hg: Make the callbacks take a Tree<> instead of just 
	the data, so they can use methods on the tree (which can be a node 
	in the tree).
	gobject_: Make this protected.
	Provide the this pointer as data to g_node_new() so we can retrieve 
	it later.
	Removed children_ and parent_ because we don't need a separate store now that 
	we can get the C++ instance from the gobject instance.
	owns_gobject_: Removed because it is was always true, so the gobject was 
	always destroyed (and still is).
	* tests/glibmm_tree/main.cc: Updated for the changed API.
	Bug #520778.

2008-07-25  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/volumemonitor.hg: Added the drive_eject_button signal.

2008-07-25  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_enums.defs: Hacked in a replacement 
	enum for Gio::Error::HOST_NOT_FOUND as 
	Gio::Error::HOST_WAS_NOT_FOUND, to avoid a clash with 
	a netdb.h define.
	Bug #529496.
	* configure.in:
	* tests/Makefile.am:
	* tests/giomm_ioerror/Makefile.am:
	* tests/giomm_ioerror/main.cc: Added a test to make sure 
	that our hacked-in enum value stays hacked in.

2008-07-25  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_enums.defs:
	* gio/src/gio_methods.defs:
	* gio/src/gio_signals.defs: Regenerated.
	* gio/src/mount.hg: Corrected an _IGNORE().
	* gio/giomm/contenttype.cc:
	* gio/giomm/contenttype.h: Added content_type_guess_for_tree().

2008-07-23  Damien Carbery <damien.carbery@sun.com>

	* scripts/macros.m4: Change grep to use -i when checking for GNU m4.
	  This fixes the test on Solaris. Bug #423990.

=== 2.17.1 ===

2008-07-16  Jonathon Jongsma  <jonathon.jongsma@collabora.co.uk>

	* NEWS: update for new release

2008-07-16  Jonathon Jongsma  <jonathon.jongsma@collabora.co.uk>

	* configure.in: bump version and min required glib version

2008-07-16  Jens Georg  <mail@jensge.org>

	* MSVC_Net2003/glibmm/glibmm.vcproj: Mention new source files 
	for regex and keyfile.
	Bug #543292.

2008-07-16  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added make_directory_with_parents(), 
	query_file_type(), monitor().
	* gio/src/fileenumerator.ccg:
	* gio/src/fileenumerator.hg: Added get_container().
	* gio/src/mount.hg: Added guess_content_type() and 
	guess_content_type_finish().
	* gio/src/themedicon.hg: Added prepend_name().
	* gio/src/volume.hg: Added get_activation_root().
	* tools/m4/convert_gio.m4: Added a necessary conversion.

2008-07-15  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_methods.defs:
	* glib/src/glib_functions.defs: Regenerated with h2def.py
	* glib/src/checksum.hg: Added reset().

2008-07-15  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.ccg:
	* gio/src/appinfo.hg: Avoid a circular include to fix the build.

2008-07-15  Benjamin Herr  <ben@0x539.de>

	* gio/src/volumemonitor.hg: Removed some unnecessary ; characters, 
	to avoid warnings.
	Bug #542929.

2008-07-14  Murray Cumming,  <murrayc@murrayc.com>

	* tools/m4/convert_gio.m4:
	* gio/src/appinfo.hg: get_display(), get_startup_notify_id():
	Take a list of Gio::File, not filepath string. Now that the C API is 
	properly documented we know that this is correct. It's an API break 
	but this function could nothave worked before.

	* glib/src/glib_docs.xml: Regenerate.
	* glib/src/glib_docs_override.xml: Add overrides for 
	g_key_file_load_from_file() and g_key_file_get_value() to mention 
	exceptions.

2008-06-30  Johannes Schmid  <jhs@gnome.org>

	* glib/glibmm/containerhandle_shared.h:
	Improve documentation of Glib::OwnershipType (#540875)

2008-07-02  Armin Burgmeier  <armin@arbur.net>

	* gio/src/file.ccg: Pass NULL to the underlying C function for the 
	etags parameter in the various replace_contents functions. Also bug
	#540656.

2008-06-28  Armin Burgmeier  <armin@arbur.net>

	* gio/src/file.ccg: Pass NULL to the underlying C function for the
	etags parameter in various *_replace functions. Otherwise, existing
	files are not overwritten. Bug #540656.

2008-06-23  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* examples/Makefile.am:
	* examples/keyfile/Makefile.am:
	* examples/keyfile/example.ini:
	* examples/keyfile/main.cc: Added a little KeyFile example. I am 
	surprised that we do not seem to have one somewhere already.
	I need to move all these glibmm examples into gtkmm-documentation some 
	time.

2008-06-19  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/tree.hg: Some whitespace changes. And more use of typedefs 
	to simplify the code.

2008-06-19  Levi Bard  <taktaktaktaktaktaktaktaktaktak@gmail.com>

	* glib/src/tree.hg: Some minor changes to deal with TODOs.
	Bug #538803.

2008-06-17  Chris Vine <chris@cvine.freeserve.co.uk>

	* glib/src/thread.hg: document that the slot object passed to
	Glib::Thread::create() should not represent a non-static method of
	a class derived from sigc::trackable.
	See bug #512348.

=== 2.17.0 ===

2008-06-16  Jonathon Jongsma  <jonathon.jongsma@collabora.co.uk>

	* NEWS:
	* configure.in: update for new release

2008-06-13  Levi Bard  <taktaktaktaktaktaktaktaktaktak@gmail.com>

	* glib/glibmm.h:
	* glib/glibmm/Makefile.am:
	* glib/src/Makefile_list_of_hg.am_fragment:
	* glib/src/tree.ccg:
	* glib/src/tree.hg: Added Glib::Tree, a wrapper for GNode, providing 
	an N-ary tree container, more or less like a standard C++ container.
	* configure.in:
	* tests/Makefile.am: Added some test code for this new API.
	Bug #520778

2008-06-13  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/date.hg: Used @newin2p18 on the new API and made some 
	slight corrections to the new reference documentation comments.

2008-06-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	* tests/glibmm_date/Makefile.am: Contents of files in
	tests/glibmm_date/ (main.cc and Makefile.am) were duplicated when I
	applied patch in bug #536721 to already existing files before 6/9
	commit. Fixed main.cc already, so now repaired Makefile.am.

2008-06-10  José Alburquerque  <jaalburqu@svn.gnome.org>

	* tests/glibmm_date/main.cc: Removed duplicate code so test can
	compile.

2008-06-09  José Alburquerque  <jaalburqu@svn.gnome.org>

	* glib/src/date.ccg:
	* glib/src/date.hg: Added copy constructor and assignment operator;
	Made GDate constructor visible.

	* configure.in:
	* tests/Makefile.am:
	* tests/glibmm_date/Makefile.am:
	* tests/glibmm_date/main.cc: Added simple test to test Glib::Date.

This is svn trunk for new API, wrapping glib 2.17/18. See also the glibmm-2-16 branch.

2008-04-25  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/drive.hg:
	* gio/src/volume.hg: add TypeTraits implementations for Drive and Volume
	similar to the one added for Mount.

2008-04-23  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/mount.hg: Add a TypeTraits implementation for
	Glib::RefPtr<Gio::Mount> so that we can wrap implementor types that don't
	have a wrapper (e.g. GHalMount in gvfs).  Fixes bug #529533

2008-04-24  Jonathon Jongsma  <jjongsma@gnome.org>

	* glib/glibmm/wrap.cc: Improve the error message when failing to wrap a
	particular type of object to give a hint about initializing the library
	since we get so many questions about this (bug #529648)

2.16.2:

2008-04-18  Jonathon Jongsma  <jjongsma@gnome.org>

	* NEWS:
	* configure.in: bump to 2.16.2 for release

2008-04-16  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/spawn.hg: Moved the enum back out of the doxygen group, 
	because that results in the enums group being inside the spawn group.

2008-04-16  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/spawn.hg: Addded doxygen documentation based on the 
	C documentation.
	Bug #528271 (Jonathon Jongsma)

2008-04-13  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.ccg: set_long_name(): Do not use NULL for an 
	empty string, because "" has a special meaning to GOptionEntry - it 
	is the definition of G_OPTION_REMANING.
	* examples/options/main.cc: Add an entry with the long name 
	G_OPTION_REMAINING, to list additional non-named arguments. More 
	explicit API should be added for this.
	Bug #526831 (Christian Lundgren).
 
2008-04-13  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/ustring.cc erase(): Create an end iterator and use it, 
	instead of just using the std::string(iterator) erase implementation, 
	because that only removes one byte, which can make the whole string 
	invalid UTF-8.
	Bug #527687 (Jarro).

2008-04-11  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.ccg:
	* glib/src/optionentry.hg: Hand-code set_description(), 
	set_arg_description() and set_long_name(), to free any existing string, 
	to maybe fix a (possible) leak found by valgrind.

2008-03-29  Jonathon Jongsma  <jjongsma@gnome.org>

	* Makefile.am: add some more convenience targets for making releases

2.16.1:

2008-03-28  Tim Retout  <tim@retout.co.uk>

	* glib/glibmm/helperlist.h (operator[]): Add a newline before
	the semicolon at the end of the 'for' loop.  Fixes g++ 4.3 warning.

2008-03-29  Jonathon Jongsma  <jjongsma@gnome.org>

	* NEWS: updated
	* configure.in: bump to 2.16.1

2008-03-29  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg:
	* gio/src/file.ccg: query_default_handler(), set_display_name(), 
	query_info(), query_filesystem_info(): Do not take an extre reference, 
	because the C functions all provide new objects with an initial 
	reference. I checked.

2008-03-28  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg: create(), replace(): Do not take an extra reference, 
	because the C function has given us a new instance with an initial 
	reference. The leak stopped the stream from really replacing the file, 
	because that only happens when it is closed.

2008-03-28  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg:
	* gio/src/outputstream.hg: Documentation: Remove/fix mentions of 0 when 
	we mean something else.

2008-03-24  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/desktopappinfo.hg:
	* gio/src/unixinputstream.hg:
	* gio/src/unixmount.hg:
	* gio/src/unixoutputstream.hg: don't wrap these unix-specific types when
	building on MS Windows (bug #524126)

2008-03-18  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg: Include giomm/error.h Because Gio::Error is thrown 
	by some of these methods and it is annoying to have to include it 
	separately just to catch that.

2.16.0:

2008-03-10  Tim Mooney  <murrayc@murrayc.com>

	* glib/glibmm/object.cc: Include string.h to fix the build with 
	SUN CC.
	Bug #498438.

2008-03-07  Jonathon Jongsma  <jjongsma@gnome.org>

	* glib/glibmm.h: add an include for checksum.h which was added in the 2.15.x
	series.

2008-03-05  Murray Cumming  <murrayc@murrayc.com>

	* MAINTAINERS: Added Jonathon Jongsma as co-maintainer.

2008-03-05  Murray Cumming  <murrayc@murayc.com>

	* tools/m4/convert_gio.m4: Use __CONVERT_CONST_REFPTR_TO_P_SUN() instead 
	of __CONVERT_REFPTR_TO_P() to maybe fix the build with Sun CC.
	(Simon Zheng)

2008-03-04  Jonathon Jongsma  <jjongsma@gnome.org>

	* Makefile.am: updated the 'release' target to give a bit more helpful error
	messages

2008-03-04  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_docs.xml: Regenerated with docextract_to_xml.py.
	* gio/src/gio_docs_override.xml: Overrode g_file_query_exists() to 
	mention an exception instead of an error. G_IO_ERROR_* now does not 
	appear in any of our documentation.

2.15.8:

2008-03-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/bufferedinputstream.hg:
	* gio/src/bufferedoutputstream.hg:
	* gio/src/datainputstream.hg:
	* gio/src/dataoutputstream.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/filterinputstream.hg:
	* gio/src/filteroutputstream.hg:
	* gio/src/inputstream.hg:
	* gio/src/memoryinputstream.hg:
	* gio/src/mount.hg:
	* gio/src/outputstream.hg:
	* gio/src/seekable.hg:
	* gio/src/unixinputstream.hg:
	* gio/src/unixoutputstream.hg: Put these in a Streams doxygen group. 
	We should think of some more groups, maybe by looking at the C 
	documentation.

2008-03-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: load_contents(), load_contents_finish(), 
	load_partial_contents_finish(): Use char*& instead of char** for contents, 
	though that is not that great either. Use std::string& instead of char** 
	for etag_out. Added method overloads without cancellable.
	We might want other method overloads in future. 

2008-02-29  Jonathon Jongsma  <jjongsma@gnome.org>

	* Makefile.am: added 'release' target which will run distcheck, tag the
	repository with the current version and upload the tarball to
	master.gnome.org

2008-02-27  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/asyncresult.hg:
	* gio/src/file.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/gio_docs_override.xml:
	* gio/src/inputstream.hg:
	* gio/src/outputstream.hg: Correct hand-coded documentation, 
	to talk about throwing exceptions rather than setting or returning 
	errors.
	* gio/src/mount.hg: Add class documentation based on the C documentation.

2008-02-27  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_docs.xml: Regenerated with docextract_to_xml.py.
	* gio/src/gio_docs_override.xml: Override some documentation that 
	mentions the GCancellable being optional, or that talks about setting 
	errors instead of throwing them.

2.15.7:

2008-02-26  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_methods.defs: Regenerated.
	* gio/src/file.ccg:
	* gio/src/file.hg: Added query_filesystem_info_async() and 
	query_filesystem_info_finish() because these were added to the C API.
	* gio/src/themedicon.hg: Added append_name() because this was added to 
	the C API.

2008-02-25  Jonathon Jongsma  <jjongsma@gnome.org>

	* docs/reference/Doxyfile.in: 'upgraded' the doxygen config file since
	doxygen was complaining about obsolete options
	* gio/giomm/contenttype.h:
	* gio/src/bufferedinputstream.hg:
	* gio/src/file.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/outputstream.hg:
	* glib/src/checksum.hg:
	* glib/src/keyfile.hg: fixed a bunch of minor doxygen warnings

2008-02-25  Jonathon Jongsma  <jjongsma@gnome.org>

	* docs/reference/doxygen_to_devhelp.xsl: add path separators between the
	reference prefix and the link filenames
	* docs/reference/Makefile.am: remove trailing slash from the reference
	prefix (fixes bug #518673)

2008-02-25  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	* gio/src/file.hg:
	* gio/src/gio_docs.xml:
	* gio/src/gio_methods.defs:
	* gio/src/gio_vfuncs.defs:

	Initial work for another API change:
	g_file_contains_file() has been renamed to
	g_file_has_prefix() (with the parameter order swapped!)

2008-02-25  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	* glib/src/uriutils.ccg:
	* glib/src/uriutils.hg:

	g_uri_get_scheme has been renamed to g_uri_parse_scheme
	in GLib trunk. Updated accordingly.

2008-02-24  Jonathon Jongsma  <jjongsma@gnome.org>

	* docs/reference/Makefile.am: dist xml/index.xml to satisfy build-deps for
	building the devhelp book from the tarball.  Fixes distcheck.

2.15.6:

2008-02-24  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/inputstream.hg: Updated the todo regarding read().

2008-02-22  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/fileattributeinfolist.hg: Added dup().
	* gio/src/gio_others.defs: Added signals for GMount and GVolume.
	This deals with the gmmproc warnings.

2008-02-21  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/desktopappinfo.hg: Revert the change from José which removed 
	use of _WRAP_CTOR() and _WRAP_CREATE(). We really do want to use these 
	so we instantiate derived GTypes.

2008-02-21  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/desktopappinfo.hg: Made is_hidden() const.

2008-02-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/desktopappinfo.hg: Used _WRAP_METHOD instead of _WRAP_CREATE
	for create() to allow docs from C API to be used

2008-02-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/desktopappinfo.hg: Renamed new_from_file() to
	create_from_file()

2008-02-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/desktopappinfo.hg: Added create(), create_from_file()
	is_hidden() and set_desktop_env()
	* tools/m4/convert_gio.m4: Added DesktopAppInfo conversion

2008-02-21  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_methods.defs: Regenerated with h2defs.py

	* gio/src/gio_signals.defs: Corrected the GMountOperation::ask-question 
	definition.
	* gio/src/mountoperation.hg: Wrapped the ask-question signal, though 
	I wonder if it really works.

	* gio/src/memoryinputstream.ccg:
	* gio/src/memoryinputstream.hg:
	Added add_data(const void* data, gssize len).

	* gio/src/gio_others.defs: Added g_themed_icon_get_names() 
	because h2defs.py cannot seem to parse it.
	* gio/src/Makefile.am: Mention gio_methods.defs.
	* gio/src/themedicon.hg: Attempted to wrap get_names(), but I get a 
	gmmproc error.

2008-02-20  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/desktopappinfo.hg: Removed a todo regarding
	DesktopAppInfoLookup. We will not wrap it as it is an interface
	that is used by backends.

2008-02-20  Jonathon Jongsma  <jjongsma@gnome.org>

	* docs/reference/Makefile.am: updated some build dependencies that were
	causing issues after adding the xml/devhelp build rules.  Also removed some
	cruft that was supposedly setting the doxygen image path for gtk stock icons
	(presumably copied from the gtkmm build rules).  Should Fix Bug #517423

2008-02-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.hg:
	* gio/src/bufferedinputstream.hg:
	* gio/src/drive.hg:
	* gio/src/file.hg:
	* gio/src/filemonitor.hg:
	* gio/src/icon.hg:
	* gio/src/seekable.hg:
	* gio/src/volume.hg:
	* gio/src/volumemonitor.hg: Comment out _WRAP_VFUNC() lines because 
	we decided that they are not useful (people will not create new 
	implementations with giomm) and are a potential source of errors.

2008-02-20  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/convert_gio.m4:
	* gio/src/file.hg: equal(), get_relative_file(), contains_file(): Take 
	const File parameters.

2008-02-15  Jonathon Jongsma  <jjongsma@gnome.org>

	* docs/reference/Makefile.am: I should have tested this more thoroughly --
	we apparently need to use relative paths in the reference_prefix variable.
	Also add the devhelp file to the all-local target so it gets built by
	default on a simple 'make' and not just on 'make install'

2008-02-15  Jonathon Jongsma  <jjongsma@gnome.org>

	* docs/reference/Makefile.am: install the stylesheet in the gmmproc dir
	instead of the documentation directory.  This allows other libraries to get
	a path to the stylesheet by querying the just-added gmmprocdir variable.
	Also, it doesn't really belong in the documentation directory since it's not
	technically documentation.

2008-02-15  Jonathon Jongsma  <jjongsma@gnome.org>

	* docs/reference/doxygen_to_devhelp.xsl: make this more general instead of
	hard-coding the name and title and reference path into the stylesheet --
	instead pass them as parameters on the commandline
	* docs/reference/Makefile.am: use new GMMPROC_DIR variable.  Also install
	the doxygen_to_devhelp.xsl stylesheet so that other libraries can use the
	installed version instead of having everybody copy the file into their own
	library if they want to generate a devhelp book

2008-02-15  Jonathon Jongsma  <jjongsma@gnome.org>

	* configure.in: add a GMMPROC_DIR variable so the individual
	Makefile.am files don't need to duplicate the information about where
	gmmproc is to be installed
	* glib/glibmm-2.4.pc.in: add new gmmprocdir variable so that interested
	libraries can query it with `pkg-config --variable gmmprocdir glibmm-2.4`
	* tools/Makefile.am:
	* tools/m4/Makefile.am:
	* tools/pm/Makefile.am: use the new GMMPROC_DIR variable

2008-02-14  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/dataoutputstream.hg: Removed get/set_newline_type(),
	which doesn't exist in the C API.

2008-02-13  Jonathon Jongsma  <jjongsma@gnome.org>

	* docs/reference/Doxyfile.in:
	* docs/reference/Makefile.am:
	* docs/reference/doxygen_to_devhelp.xsl: generate and install a devhelp book
	for glibmm like we do for gtkmm.  It would be nice to make the xsl
	stylesheet general and shared between gtkmm and glibmm (and eventually other
	libraries as well), but for now I just duplicated it here

2008-02-12  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/gio_methods.defs: Regenerated with h2defs.py.

	* gio/src/unixinputstream.hg:
	* gio/src/unixoutputstream.hg: Made wrapped constructors protected.

	* gio/src/bufferedinputstream.hg:
	* gio/src/datainputstream.hg:
	* gio/src/dataoutputstream.hg: Ditto for Data*Streams,
	and marked some hand-wrapped functions to ignore.

	* gio/src/mountoperation.hg: Wrote a note about ask_question signal,
	still to be wrapped.

	* gio/src/volume.hg: Added should_automount().

	* gio/giomm: Updated svn:ignore properties.

2.15.5:

2008-02-11  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/gio_enums.defs:
	* gio/src/gio_vfuncs.defs:
	* gio/src/mount.ccg:
	* gio/src/mount.hg:
	* gio/src/volume.ccg:
	* gio/src/volume.hg:
	* tools/m4/convert_gio.m4: update to match new gio API which adds a
	GMountMountFlags argument to all mount operations

2008-02-11  Jonathon Jongsma  <jjongsma@gnome.org>

	* configure.in: bump glib requirement to 2.15.5 (bug #515727)

2008-02-09  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_vfuncs.defs: Added hand-written vfunc .defs for 
	GVolume and GVolumeMonitor.
	* gio/src/volume.hg:
	* gio/src/volumemonitor.hg: Added vfuncs, though not using all C++ types 
	yet. I am not really sure that these will ever be useful (if anyone will 
	ever want to implement them in C++).

2008-02-09  Murray Cumming, <murrayc@murrayc.com>

	* gio/giomm.h:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/simpleasyncresult.ccg:
	* gio/src/simpleasyncresult.hg: removed SimpleAsyncResult because I 
	do not believe it is really public API. If we are wrong then we 
	can resurrect it from svn later.

2008-02-09  Takao Fujiwara  <Takao.Fujiwara@Sun.COM>

	* glib/glibmm/Makefile.am:
	* glib/glibmm/i18n-lib.h: Actually install this header, 
	and make the header guards unique.
	Bug #515133

2.15.4:

2008-02-07  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/Makefile.am:
	* glib/glibmm/main.h: Moved the Priorities enum into
	* glib/glibmm/priorities.h:
	Though all the giomm stuff seems to already include main.h anyway. 
	It probably shouldn't, and then we can include priorities.h only.

	* gio/src/bufferedinputstream.hg:
	* gio/src/file.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/gio_methods.defs:
	* gio/src/inputstream.hg:
	* gio/src/outputstream.hg: Use Glib::PRIORITY_DEFAULT instead of 
	G_PRIORITY_DEFAULT.

	* glib/src/iochannel.ccg: Add some ifdefs to avoid unused parameter 
	warnings when exceptions are disabled, because our current trick for 
	that is now causing another warning instead.

2008-02-06  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/datainputstream.ccg:
	* gio/src/datainputstream.hg: change the read_line() and read_until() APIs
	so that they are actually useable.  These functions now return a boolean
	value to indicate that the end of the stream was reached and return the
	string data via reference argument.  See bug #514097 for more information

2008-02-06  Murray Cumming <murrayc@murrayc.com>

	* gio/src/gio_methods.defs: Regenerated with h2defs.py

	* configure.in: Depend on gio-unix-2.0 when not on win32.
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/unixinputstream.ccg:
	* gio/src/unixinputstream.hg:
	* gio/src/unixoutputstream.ccg: Mentioned this as unix-specific files 
	so they are built.

	* gio/src/bufferedoutputstream.hg: Fixed a parameter type to fix the 
	build, after a change in gio.

2008-02-05  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added an overload of query_default_handler() 
	without the cancellable.

2008-02-05  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/vfs.ccg:
	* gio/src/vfs.hg: Remove these because they are not API - they 
	are declarations of entry points for dynamically-loadable modules.

2008-02-04  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added copy_async(), with overloads without
	slot_progress (which is optional and would run in the main loop),
	with documentation. Wrapped copy_finish(), query_default_handler().

2008-02-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/desktopappinfo.ccg:
	* gio/src/desktopappinfo.hg: Added DesktopAppInfo but not to
	Makefile_list_of_hg.am_fragment yet (need to use gio-unix-2.0.pc to
	compile correctly)

2008-02-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/bufferedoutputstream.ccg: Changed size param of
	create_sized() to type gsize (in agreement with declaration) to fix
	compilation

2008-02-04  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_interface.m4: Allow _CLASS_INTERFACE() to take two 
	extra optional paremeters to specify the base class, so that appropriate 
	code is generated when we derive from another Interface - which seems 
	appropriate when the GInterface has a prerequisite.
	* gio/src/loadableicon.ccg:
	* gio/src/loadableicon.hg: Derive from Icon, because it is a prerequisite 
	of this interface. Use the extra _CLASS_INTERFACE() parameters.
	* gio/src/fileicon.hg: Do not derive from Icon because that happens 
	through LoadableIcon now. But do use _IMPLEMENTS_INTERFACE(Icon) here, 
	because only a Glib::Object can actually implement an interface.

2008-02-04  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/file.hg: remove an obsolete TODO
	* gio/src/gio_vfuncs.defs: add LoadableIcon vfunc definitions
	* gio/src/loadableicon.ccg:
	* gio/src/loadableicon.hg: wrap some methods of LoadableIcon.  Some vfuncs
	need to be wrapped yet

2008-02-04  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/bufferedoutputstream.hg: switch back create_sized() size parameter
	to gsize since glib switched their declaration due to bug #514013.

2008-02-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/unixinputstream.ccg:
	* gio/src/unixinputstream.hg:
	* gio/src/unixmount.ccg:
	* gio/src/unixmount.hg:
	* gio/src/unixoutputstream.ccg:
	* gio/src/unixoutputstream.hg: Added these, but not to
	Makefile_list_of_hg.am_fragment to avoid compile errors (need
	gio-unix-2.0.pc to compile correctly)
	* gio/src/vfs.hg: Moved forward decs to top (was between class doc and
	declaration)

2008-02-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/vfs.ccg:
	* gio/src/vfs.hg:
	* tools/m4/convert_gio.m4: Added Vfs

2008-02-04  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs_gio.cc: Added types.
	* gio/src/gio_signals.defs: Regenerated.
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/filenamecompleter.hg:
	* gio/src/themedicon.hg: Added FilenameCompleter and ThemedIcon.

2008-02-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/bufferedoutputstream.ccg: changed size param of
	create_sized() to type guint (in agreement with declaration)
	* gio/src/file.ccg:
	* gio/src/file.hg: added non-cancellable set_attribute_string(),
	set_attribute_byte_string(), set_attribute_{uint32, int32, uint64,
	int64}

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs_gio.cc: Added types.
	* gio/src/gio_signals.defs: Regenerated.

	* tools/m4/convert_gio.m4:
	* gio/src/drive.hg:
	* gio/src/filterinputstream.hg:
	* gio/src/filteroutputstream.hg:
	* gio/src/mount.hg:
	* gio/src/mountoperation.hg:
	* gio/src/volume.hg:
	* gio/src/volumemonitor.hg: Added signals and properties.

	* gio/src/file.ccg:
	* gio/src/file.hg: Added query_filesystem_info() without a cancellable.

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/filemonitor.hg: Add class documentation, now that there is 
	some in gio.
	* gio/src/volumemonitor.hg: Add class documentation.
	Remove _DO_NOT_DERIVE_GTYPE because gio no longer abuses the type 
	system - see bug #511814.

2008-02-02  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/giomm.h:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/memoryinputstream.ccg:
	* gio/src/memoryinputstream.hg: add MemoryInputStream class

2008-02-02  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/dataoutputstream.ccg: fix copy/paste error

2008-02-02  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/datainputstream.hg:
	* gio/src/dataoutputstream.hg: add DataOutputStream class
	* gio/src/dataoutputstream.ccg:
	* gio/src/enums.ccg:
	* gio/src/enums.hg: moved the DataStream enums to a common enums header
	since they're needed by both the input and output data streams.
	* gio/giomm.h: add new headers

2008-02-02  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/bufferedoutputstream.ccg:
	* gio/src/bufferedoutputstream.hg: add BufferedOutputStream class

2008-02-02  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/giomm.h:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/filteroutputstream.ccg:
	* gio/src/filteroutputstream.hg:
	* tools/m4/convert_gio.m4: add FilterOutputStream class

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: find_enclosing_mout(), append_to(): Reordered 
	parameters and added overload without cancellable. Removed superfluous 
	monitor_file() overload.

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/convert_gio.m4:
	* gio/src/bufferedinputstream.hg: Move a signal-specific conversion 
	here, because these conversions are unusual and shouldn't be used by 
	mistake elsewhere, and when they are next to the signal then it is 
	more obvious why they take a reference (also fixed).

2008-02-02  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/giomm.h: add new header files to the main include
	* gio/src/datainputstream.hg: add FIXME note about not being able to tell
	error conditions from empty strings on read_line() / read_until()

2008-02-02  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/giomm/Makefile.am: add slot_async.h private header to EXTRA_DIST so
	that it gets distributed.  I didn't add it to the
	sublib_files_extra_general_h variable, since then it would get installed

2008-02-02  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/datainputstream.ccg:
	* gio/src/datainputstream.hg:
	* tools/m4/convert_gio.m4: add DataInputStream class

2008-02-02  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/gio_vfuncs.defs:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/bufferedinputstream.ccg:
	* gio/src/bufferedinputstream.hg: add BufferedInputStream class
	* gio/giomm/slot_async.cc:
	* gio/giomm/slot_async.h: split out the SlotProxy_async_callback so it
	doesn't have to be implemented in every file
	* gio/src/drive.ccg:
	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/fileenumerator.ccg:
	* gio/src/fileinputstream.ccg:
	* gio/src/fileoutputstream.ccg:
	* gio/src/inputstream.ccg:
	* gio/src/mount.ccg:
	* gio/src/outputstream.ccg:
	* gio/src/volume.ccg: use the common SlotProxy_async_callback function in
	all of these files
	* tools/m4/convert_gio.m4: add conversion for Cancellable
	* gio/giomm/Makefile.am: indenting changes

2008-02-02  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/volumemonitor.hg: Removed VolumeMonitorEvent enum def,
	which does not exist any more in the C API.
	* gio/src/volume.hg: Added get_identifier(), enumerate_identifiers().

2008-02-02  Marko Anastasov  <marko@marko.anastasov.name>

	* gio/src/volume.hg: Added get_mount().
	* gio/src/gio_enums.defs: Regenerated with enums.pl.
	* gio/src/gio_methods.defs: Regenerated with h2defs.py.

2008-02-02  Kjartan Maraas  <kmaraas@gnome.org>

	* tests/giomm_simple/main.cc: Fix compile with GCC 4.3.

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	* build_shared/Makefile_gensrc.am_fragment: Use the local .pm files 
	for gmmproc instead of installed ones. This was a regression that I 
	introduced when I added gio to the build.
	* tools/pm/DocsParser.pm: append_parameter_docs(): Ignore error 
	parameters because they are almost always wrapped as exceptions.

2008-02-01  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/Makefile.am:
	* gio/src/appinfo.hg:
	* gio/src/gio_vfuncs.defs:
	* tools/m4/convert_gio.m4:
	* tools/m4/convert_glib.m4: Add Gio::AppInfo vfuncs

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added overloads of create_file(), remove(), trash(), 
	make_directory(), make_symbolic_link(), query_settable_attributes(), 
	and query_writable_namespaces() without cancellable parameters.
	The set_attribute_*() methods still need this to be done. 

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/cancellable.hg: Added the signal.
	* gio/src/file.ccg:
	* gio/src/file.hg: Added copy_attributes(), added mount_enclosing_volume() 
	mount_enclosing_volume_finish(), find_enclosing_mount(), and 
	find_enclosing_mount_finish(). 
	Added a mount_mountable() overload with no parameters.
	set_attributes_from_info(): Reordered parameters so we can have default 
	values.

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	* gio/giomm/contenttype.cc:
	* gio/giomm/contenttype.h: Use convert_return_gchar_ptr_to_ustring() 
	because it releases the gchar* and checks for NULL.
	Removed the ontent_type_guess() that takes a basic_string<guchar> 
	because I doubt anybody would use that. Added one that takes a 
	gchar* and size, and one that takes a std::string (for when the data is 
	a string).

2008-01-31  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/giomm/contenttype.cc: put content_type functions in the Gio namespace
	which was accidentally omitted.

2008-01-31  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/giomm.h: forgot to add new contenttype.h header
	* gio/giomm/Makefile.am: forgot to install contenttype.h header

2008-01-31  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/giomm/Makefile.am:
	* gio/giomm/contenttype.cc:
	* gio/giomm/contenttype.h: wrap content_type_* functions

2008-01-29  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg: get_child_for_display_name(): 
	Change the display_name parameter to a ustring because 
	the C documentation says it should be UTF-8.
	* gio/src/fileinfo.hg: Add get_attribute_as_string(), which
	returns a UTF-8 string.
 	(Note that no other gio documentation mentions UTF-8.)
	Thanks to Iain Nicol.

2.15.3:

2008-01-27  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/fileattribute.ccg:
	* gio/src/fileattribute.hg: Split into 
	* gio/src/fileattributeinfo.ccg:
	* gio/src/fileattributeinfo.hg: and 
	* gio/src/fileattributeinfolist.ccg:
	* gio/src/fileattributeinfolist.hg

	* gio/giomm.h:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/file.hg:
	* gio/src/fileinfo.hg:
	* gio/src/outputstream.hg:
	* gio/src/seekable.hg:
	* glib/src/optionentry.hg: Adapted.

	* tools/pm/DocsParser.pm: substitute_identifiers(): 
	Tried (unsuccessfully) to remove G:: prefixes in generated documentation.

2008-01-27  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.hg:
	* gio/src/asyncresult.hg:
	* gio/src/cancellable.hg:
	* gio/src/drive.hg:
	* gio/src/error.hg:
	* gio/src/file.hg:
	* gio/src/fileattribute.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileicon.hg:
	* gio/src/fileinfo.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/filterinputstream.hg:
	* gio/src/icon.hg:
	* gio/src/inputstream.hg:
	* gio/src/loadableicon.hg:
	* gio/src/mount.hg:
	* gio/src/mountoperation.hg:
	* gio/src/outputstream.hg:
	* gio/src/seekable.hg:
	* gio/src/simpleasyncresult.hg:
	* gio/src/volume.hg: Do not include gio.h from our public headers, to 
	avoid polluting the namespace.
 
2008-01-27  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.ccg:
	* gio/src/appinfo.hg: Make equal() non virtual - equal_vfunc() is instead.
	* gio/src/file.ccg:
	* gio/src/file.hg: Make equal() non virtual - equal_vfunc() is instead.
	replace_contents(), replace_contents_async(), replace_contents_finish():
	Reordered parameters to allow default values, and added method overloads.

2008-01-25  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/convert_gio.m4:
	* gio/src/filterinputstream.hg: Added the _CLASS_* macro so this type  
	is really wrapped.

2008-01-25  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_shared.m4: Added _DO_NOT_DERIVE_GTYPE for use in .hg 
	files when we do not want to derive a new GType, meaning of course that 
	we cannot have default signal handlers or vfuncs.
	* gio/src/volumemonitor.hg: Use _DO_NOT_DERIVE_GTYPE, because 
	gio tries to call every type that derives from G_TYPE_VOLUME_MONITOR, 
	which seems unwise to me - bug #511814.
	This makes gtkmm-documentation/examples/book/volumes not crash.

2008-01-24  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/giomm.h: add missing headers to the main include header

2008-01-23  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/error.hg: Renamed Gio::IOError to 
	Gio::Error.
	* gio/src/fileenumerator.ccg:
	* gio/src/fileenumerator.hg: Added method overloads of close() and 
	next_file() without the cancellable parameter.

2008-01-23  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/error.ccg:
	* gio/src/error.hg: Wrapped GIOErrorEnum as Gio::Error exception.
	(This is registered in wrap_init()), so that the correct exception 
	is thrown.
	* gio/giomm.h: Include error.h

2008-01-23  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added a read() method overload with no 
	cancellable parameter.
	* tests/giomm_simple/main.cc: Try loading the contents of a file.
	Seems to work, though there is an unknown GError domain when the file 
	does not exist.

2.15.2:

2008-01-21  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_methods.defs: Regenerated.
	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/fileinputstream.ccg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.ccg:
	* gio/src/fileoutputstream.hg: More overloads, parameter reordering, 
	and documentation.

2008-01-21  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/inputstream.ccg:
	* gio/src/inputstream.hg: Added method overloads and documentation.

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/fileinputstream.ccg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.ccg:
	* gio/src/fileoutputstream.hg: Ignore functions that are just 
	duplicates of the ones in Seekable, and mention Seekable more in 
	the documentation.
	* gio/src/seekable.hg: Expand the class documentation.
	* gio/src/outputstream.ccg:
	* gio/src/outputstream.hg: Added method overloads and documentation.

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/objectbase.cc:
	* glib/glibmm/objectbase.h: Added connect_property_changed_with_return() 
	because connect_property_changed() does not return a sigc::connection.
	Bug #433984 (Philip Langdale, Kalle Vahlman).

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/checksum.ccg:
	* glib/src/checksum.hg: Added class documentation. Corrected constructor 
	documentation and added operator bool() to check for a failure in the 
	constructor.

2008-01-20  Marko Anastasov  <marko@marko.anastasov.name>

	* tools/enum.pl: Handle possible parenthesis when matching enum
	values declared as shifted ones. Bug #498621.

2008-01-20  Naveen Verma  <ernaveenverma@gmail.com>

	* glib/src/checksum.[hg|ccg]:
	* glib/src/Makefile_list_of_hg.am_fragment:
	Added Checksum, wrapping GChecksum Bug #510235.

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/inputstream.hg: Ignore g_input_stream_clear_pending() as well as 
	the other implementation functions.
	* gio/src/outputstream.hg: Ignore the equivalent functions here, 
	assuming that they are also only for implementations.

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/fileinfo.hg: FileAttributeMatcher::create(): Add a default 
	value and documentation.
	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/mount.ccg:
	* gio/src/mount.hg: const corrections for Slot* and Cancellable 
	parameters.

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg:
	* gio/src/file.ccg: enumerate_children(), enumerate_children_async(), 
	query_info(), query_info_async(), query_exists(): Reorder parameters to 
	add default values, add documentation, make const.

2008-01-18  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/mount.ccg:
	* gio/src/mount.hg: Added unmount(), remount(), and 
	eject(), based on code from José Alburquerque in bug #510080.
	* gio/src/volume.hg: Added documentation.

2008-01-18  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/drive.ccg:
	* gio/src/drive.hg: poll_for_media(): Added documentation.
	Wrapped 2 vfuncs (though the .defs still need to be written).
	* gio/src/file.ccg:
	* gio/src/file.hg: move(), copy(), replace(): Rearranged the parameters so we 
	can have default values, and added some documentation.
	set_display_name(), set_display_name_async(): Take a ustring instead 
	of a std::string. Added documentation.

	* gio/src/fileattribute.ccg:
	* gio/src/fileattribute.hg: Added FileAttributeInfoList::add().
	Added FileAttributeInfoList::empty().

	* tools/m4/convert_gio.m4: 
	* gio/src/appinfo.hg:
	* gio/src/fileenumerator.hg: Move the ListHandle conversions to the 
	.hg files because the ownership is specific to each use.

2008-01-18  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/drive.hg:
	* gio/src/volumemonitor.hg: Wrapped functions that reurn GLists.

2008-01-18  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.hg:
	* gio/src/icon.hg: Removed operator= and operator!= for these RefPtr<> 
	specializations, because they are unobvious and conflict with the generic 
	ones.

2008-01-17  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/inputstream.ccg:
	* gio/src/inputstream.hg: Fixed const-ness of Cancellables.
	* gio/src/fileinputstream.ccg:
	* gio/src/fileinputstream.ccg:
	* gio/src/fileoutputstream.ccg:
	* gio/src/fileoutputstream.hg: Added an overload of query_info_async(),
	* gio/src/outputstream.ccg:
	* gio/src/outputstream.hg: write_async(), splice_async() without
	the Cancellable.

	Patch from José Alburquerque, bug #510080.

2008-01-17  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg:
	* gio/src/drive.ccg:
	* gio/src/drive.hg: eject(),
	* gio/src/volume.ccg:
	* gio/src/volume.hg: eject(),
	* tools/m4/convert_gio.m4: Wrapped GMountUnmountFlags enum as 
	MountUnmountFlags, and used it. 

	* gio/src/file.ccg:
	* gio/src/file.hg: unmount_mountable(), eject(): Reorder the 
	parameters and add a default flag value.

2008-01-17  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/filterinputstream.ccg:
	* gio/src/filterinputstream.hg:
	* gio/src/Makefile_list_of_hg.am_fragment: Added FilterInputStream.

	Updated svn:ignore properties.

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs_gio.cc: Added Mount and 
	VolumeMonitor.
	* gio/src/gio_signals.defs: Regenerated.

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/mount.ccg:
	* gio/src/mount.hg: Added Mount
	* gio/src/volumemonitor.hg:
	* gio/src/volumemonitor.ccg: Added VolumeMonitor.

	* tools/m4/convert_gio.m4: Added necessary conversions.

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* tools/m4/convert_gio.m4:
	* gio/src/filemonitor.hg:
	* gio/src/filemonitor.hg: Added FileMonitor.
	* gio/src/file.hg: Tried to wrap monitor_file() and 
	monitor_directory but there is a problem with the GError in 
	the generated code.

	* tools/extra_defs_gen/generate_defs_gio.cc: Added GFileMonitor.

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/seekable.ccg:
	* gio/src/seekable.hg: Added methods and vfuncs (though the .defs 
	do not exist for the vfuncs yet.)

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg: Added query_file_exists().
	* glib/src/uriutils.hg:uri_unescape_string(), uri_escape_string():
	Change the illegal_characters and reserved_chars_allowed parameters 
	to std::string, because they may not be UTF-8 
	See bug #508773.

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/drive.ccg:
	* gio/src/drive.hg:  eject(), poll_for_media()
	* gio/src/volume.ccg:
	* gio/src/volume.hg: mount(), eject():
	Add method overloads that take no slot.

	* glib/src/uriutils.hg: Fix a typo to fix the build.

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/uriutils.hg: Improved the documentation for uri_unescape_string(), 
	based on the improved C documentation.

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/drive.ccg:
	* gio/src/drive.hg:
	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/fileenumerator.ccg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileinputstream.ccg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.ccg:
	* gio/src/fileoutputstream.hg:
	* gio/src/inputstream.ccg:
	* gio/src/inputstream.hg:
	* gio/src/outputstream.ccg:
	* gio/src/outputstream.hg:
	* gio/src/volume.ccg:
	* gio/src/volume.hg: *_async() functions: Rearrange the parameters, 
	so the (optional) cancellable is always after the slot, 
	and so flags and io_priority are always at the end, so they can have 
	default values. 

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/Makefile_list_of_sources.am_fragment:
	* tools/m4/convert_gio.m4:
	* tools/m4/convert_glib.m4:
	* tools/m4/convert_gtkmm.m4: Moved the gio conversions into 
	their own .m4 file, to make it easier to find them.

	* gio/src/cancellable.ccg:
	* gio/src/cancellable.hg: Use _WRAP_METHOD() for get_current(), 
	which also fixes the refcounting.
	* glib/src/uriutils.hg: Added documentation and default parameter 
	values.

2.15.1:

2008-01-12  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm.h: Added uriutils.h
	* glib/glibmm/private/Makefile.am: Renamed some variables to 
	avoid clashes with the build_shared/ variables, which caused 
	a dist failure involving wrap_init.h

2008-01-11  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.hg: Added class documentation.
	* gio/src/asyncresult.hg:
	* gio/src/cancellable.hg:
	* gio/src/drive.hg:
	* gio/src/file.hg:
	* gio/src/fileattribute.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileicon.hg:
	* gio/src/fileinfo.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/icon.hg:
	* gio/src/inputstream.hg:
	* gio/src/loadableicon.hg:
	* gio/src/mountoperation.hg:
	* gio/src/outputstream.hg:
	* gio/src/seekable.hg:
	* gio/src/simpleasyncresult.hg:
	* gio/src/volume.hg: Added @newin2p16 to 
	the documentation.

	* glib/src/Makefile_list_of_hg.am_fragment:
	* glib/src/uriutils.ccg:
	* glib/src/uriutils.hg: Added wrappers of (some) of 
	these new g_uri_* functions. Not yet documented.

2008-01-11  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Rename create() to create_file(), 
	create_async() to create_file_async() and 
	create_finish() to create_file_finish() to slightly 
	reduce confusion with the static create*() methods.

2008-01-11  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/seekable.ccg:
	* gio/src/seekable.hg: Added the Seekable interface, though it 
	has not methods yet.
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg: Derive/implement Seekable.
	* gio/src/icon.hg:
	* gio/src/inputstream.hg:
	* gio/src/loadableicon.hg:
	* gio/src/mountoperation.hg:
	* gio/src/outputstream.hg:
	* gio/src/simpleasyncresult.hg:
	* gio/src/volume.hg: Added class documentation, based on the C 
	documentation.

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/appinfo.ccg:
	* gio/src/appinfo.hg: Wrapped AppInfo and AppLaunchContext, without
	the vfuncs.
	* tools/m4/convert_glib.m4: New conversions.
	The previous comment on build was not valid.

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/appinfo.ccg:
	* gio/src/appinfo.hg:
	* gio/src/Makefile_list_of_hg.am_fragment:
	Added AppInfo, with only two methods before we see why it
	doesn't get included in the build.

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/drive.hg:
	* gio/src/drive.ccg: Added poll_for_media, poll_for_media_finish.
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/inputstream.hg:
	* gio/src/volume.hg: Modified *_finish functions to take a const
	AsyncResult.

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/drive.hg: Added missing capability checking functions.
	* gio/giomm: Updated svn:ignore properties.

2008-01-10  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/mountoperation.hg: api change in reply() virtual function and
	addition of MountOperationResult enumeration
	* tools/m4/convert_glib.m4: add MountOperationResult enum conversion
	* gio/src/gio_enums.defs: re-generate enums
	* gio/src/gio_methods.defs: re-generate methods

2008-01-10  Murray Cumming  <murrayc@murrayc.com>

	* Makefile.am:
	* build_shared/Makefile_build.am_fragment:
	* build_shared/Makefile_build_extra.am_fragment:
	* build_shared/Makefile_build_gensrc.am_fragment:
	* build_shared/Makefile_gensrc.am_fragment:
	* build_shared/Makefile_gensrc_platform.am_fragment:
	Copy (and very slightly adjust) the build_shared/ files from 
	gtkmm, which has had multiple sub-libraries for a long time.
	* gio/giomm/Makefile.am:
	* gio/src/Makefile.am:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* glib/glibmm/Makefile.am:
	* glib/glibmm/private/Makefile.am:
	* glib/src/Makefile.am:
	* glib/src/Makefile_list_of_hg.am_fragment:
	Adapt to the structure (variable names, mostly) needed by the 
	newer build_shared/ files, so that the giomm library is actually 
	built. 

	* tools/m4/convert_glib.m4:
	* gio/giomm/init.cc:
	* gio/giomm/init.h:
	* gio/src/asyncresult.ccg:
	* gio/src/drive.ccg:
	* gio/src/drive.hg:
	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/fileattribute.ccg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/volume.ccg:
	* gio/src/volume.hg: Various build fixes, including adding a flags 
	parameter to unmount and eject methods.

2008-01-10  Murray Cumming  <murrayc@murrayc.com>

	* gio/giomm.h: Correct an include.
	* gio/src/asyncresult.hg:
	* gio/src/cancellable.hg:
	* gio/src/drive.hg:
	* gio/src/file.hg:
	* gio/src/fileattribute.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileicon.hg:
	* gio/src/fileinfo.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/outputstream.hg:
	* gio/src/simpleasyncresult.hg:
	* gio/src/volume.ccg:
	* gio/src/volume.hg: Correct several includes to use giomm/ instead of 
	glibmm/.

	* configure.in:
	* examples/Makefile.am_fragment:
	* tests/Makefile.am_fragment: Include/Link giomm too.

	* tests/Makefile.am:
	* tests/giomm_simple/Makefile.am:
	* tests/giomm_simple/giomm_simple.cc:
	Added a little test, which shows that the library is not being built 
	properly - we get undefined symbols.

2008-01-10  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs_gio.cc: Added some types used so 
	far. There are probably more that should be added here.
	* tools/extra_defs_gen/generate_extra_defs.cc: get_properties(): 
	Added warnings and a check to avoid a crash when 
	g_object_interface_list_properties() returns a NULL paramspec, but a 
	non-null properties count, as is happening with GVolume.
	* gio/src/gio_signals.defs: Generated this from generate_defs_gio.

2008-01-09  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/loadableicon.ccg:
	* gio/src/loadableicon.hg: Added this, though no methods or vfuncs are 
	wrapped yet.
	* tools/m4/convert_glib.m4:
	* gio/src/fileicon.hg:
	* gio/src/fileinfo.hg: Derive from LoadableIcon and implement it.
	set_modification_time(): Take a const TimeVal.
	* gio/src/fileinputstream.ccg:
	* gio/src/fileinputstream.hg: Added documentation and a version of 
	seek() without the cancellable parameter.
	* gio/src/gio_docs.xml: Generated from docextract_to_xml.py so we get 
	documentation for methods created by _WRAP_METHOD().

2008-01-09  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added method documentation for most *_async methods.
	See also GTK+ bug #508297.
	Removed one superfluous load_partial_contents_async() method overload.
	* gio/src/fileenumerator.hg: Corrected documentation for close_async(). 

2008-01-08  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Uncomment GTKMM_DOXYGEN_INPUT_SUBDIRS to fix the 
	reference documentation build (no idea when this happened) and add 
	gio to the list of directories.

	* glib/src/optioncontext.ccg:
	* glib/src/optioncontext.hg: Added get_help().

	* gio/src/gio_enums.defs: Regenerated with enums.pl
	* gio/src/gio_methods.defs: Regenerated with h2defs.py.

	* tools/m4/convert_glib.m4:
	* gio/src/fileattribute.hg: Renamed FileAttributeFlags to 
	FileAttributeInfoFlags, as it is in gio.

	* gio/src/fileenumerator.hg:
	* gio/src/asyncresult.hg:
	* gio/src/cancellable.hg:
	* gio/src/drive.hg:
	* gio/src/file.hg: Added class documentation, and some method 
	documentation, based on the C documentation.
	Many giomm classes still need documentation.

2008-01-08  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/asyncresult.hg:
	* gio/src/cancellable.hg:
	* gio/src/fileattribute.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/icon.hg:
	* gio/src/inputstream.hg:
	* gio/src/mountoperation.hg:
	* gio/src/outputstream.hg:
	* gio/src/simpleasyncresult.hg:
	Made some whitespace more consistent with the rest of glibmm.
	In particular, white space alignment in .hg files will often be even worse 
	when seen in the generated .h files.

	* gio/src/drive.hg: get_icon(), 
	* gio/src/file.hg: read(), 
	* gio/src/fileicon.hg: get_file(), 
	* gio/src/fileinfo.hg: get_icon(), 
	* gio/src/volume.hg: get_drive(), get_icon():
	For the const versions, actually return a const RefPtr.

2.15.0:

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	* tools/extra_defs_gen/generate_defs_gio.cc:
	* tools/extra_defs_gen/Makefile.am: Build a separate extra defs
	generating program for gio. Currently the program would crash
	with get_defs() calls with gio types.
	* configure.in: Define GIOMM_CFLAGS and GIOMM_LIBS.

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/gio_enums.defs:
	* gio/src/gio_methods.defs: Regenerated with enums.pl and h2defs.py.

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/icon.ccg:
	* gio/src/icon.hg:
	* gio/src/inputstream.ccg:
	* gio/src/inputstream.hg:
	* gio/src/Makefile_list_of_hg.am_fragment: Added files missing from
	the import.

	Set svn:ignore properties for gio.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Mention the new gio/giommconfig.h in AM_CONFIG_HEADER().
	* gio/Makefile.am: Change references to the giomm-2.0.pc to giomm-2.4.pc.
	* gio/src/Makefile_list_of_hg.am_fragment: Remove icon.hg and inputstream.hg 
	because they do not exist in svn.
	* gio/src/outputstream.hg: Comment out set_pending() because gmmproc complains 
	about the wrong number of parameters.

	This fixes the build, though I don't know yet if everything is working properly.

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	* configure.in: Fixed typo.

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/*:
	* configure.in:
	* Makefile.am:
	* tools/m4/convert_glib.m4: Checked in sources from giomm. Build
	needs to be fixed to work with scripts in build_shared/.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/ustring.h: Added @newin2p16 to compose() and format() 
	documentation.
	* glib/src/keyfile.ccg:
	* glib/src/keyfile.hg: set_double_list(): Make the ArrayHandle argument const. 
	This could not have been used before.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/keyfile.hg: Add class documentation from the glibmm-2-14 branch.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_gobject.m4:
	* tools/m4/ctor.m4:
	_INITIALLY_UNOWNED_SINK: Rename from INITIALLY_UNOWNED_SINK, 
	for consistency, because this could be used directly from .ccg files 
	that use _CONSTRUCT().
	Remove the debug code for the else case.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_gobject.m4:
	* tools/m4/ctor.m4:
	Added the _DERIVES_INITIALLY_UNOWNED macro, for use 
	after _CLASS_GOBJECT(), if the C type derives 
	from GInitiallyUnowned rather than just GObject.
	(Not for use with GtkObject-derived classes).
	This does g_object_ref_sink() so that we get a normally-behaved 
	GObject.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* scripts/c_std.m4: Added this, to fix the build. I forgot to 
	add this when merging the change from glibmm-2-14 on 2007-10-22.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/refptr.h: Use @newin2p16 in the reset() documentation.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/refptr.h: Deprecate clear(), replacing it with 
	reset(), because people often do treemodel.clear() when they 
	mean treemodel->clear(). reset() is consistent with std::auto_ptr<>.

2007-12-28  Daniel Elstner  <danielk@openismus.com>

	* tools/pm/Output.pm (output_wrap_property): Refuse to generate
	a wrapper for a construct-only property which is also write-only,
	and display an error message accordingly. (#436789)

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/error.cc:
	* glib/glibmm/exception.cc:
	* glib/src/convert.ccg:
	* glib/src/date.ccg: Include glib.h instead of gmessages.h or 
	gtestutils.h so this builds with all versions of glib.

2007-12-17  Marko Anastasov  <marko.anastasov@gmail.com>

	* glib/glibmm/exception.cc:
	* glib/glibmm/error.cc:
	* glib/src/date.ccg:
	* glib/src/convert.ccg: Include gtestutils.h instead of gmessages.h
	for g_assert* adapting to glib head.

2007-11-20  Sebastien Bacher  <seb128@ubuntu.com>

	* glib/glibmm/object.cc: fix build issue when using gcc4.3 (#498438)

2007-10-22  Murray Cumming  <murrayc@murrayc.com>

	* Merged this change from 2007-03-03 from the glibmm-2-12 branch, which was 
	missing from this branch:
	* configure.in:
	* glib/glibmmconfig.h.in:
	* glib/src/date.ccg:
	* glib/src/date.hg:
	* scripts/Makefile.am:
	* scripts/c_std.m4: Added a test for the case that time_t is equivalent to 
	guint32, as seems to be the case on NetBSD-4.99.6/amd64, so we can ifdef-out 
	the (deprecated, anyway) Glib::Date::set_time(GTime) method when necessary, because 
	GTime is also equivalent to guint32.
	Bug #386990.

2007-10-12  Armin Burgmeier  <armin@openismus.com>

	* tools/m4/base.m4: Added a new section called SECTION_HEADER_FIRST
	that within the header file that is before any generated code (apart
	from the include guards) and a _CONFIGINCLUDE macro that includes a
	file within this section. This is intended to be used with
	g*mmconfig.h so the *_DISABLE_DEPRECATED define is set for deprecated
	classes also when included from other code.

2007-10-05  Philipp Kerling <philipp@gmail.com>

	* tools/extra_defs_gen/generate_extra_defs.cc: 
	Also create defs for interfaces, by refing and unrefing them 
	temporarily.

2007-09-29  Rémi Cardona  <remi@gentoo.org>

	* configure.in:
	increase the minimum glib requirements.
	Bug #481566.

2007-10-02  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/wrap.cc:
	* glib/glibmm/wrap.h: Replaced wrap_create_new_wrapper() 
	(introduced by the last commit) with wrap_create_new_wrapper(),
	allowing us to check that the parent GType actually implements 
	the interface. This allows us to return a parent known type 
	if it implements the wanted interface.

2007-09-25  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/wrap.cc:
	* glib/glibmm/wrap.h: Added wrap_auto_interface<>(), which should 
	be used by wrap() specializations for interfaces, so we create 
	instances of the interface even if the derived C type is unknown to 
	us.
	* glib/glibmm/signalproxy_connectionnode.h: Do not wrap.h from here 
	unnecessarily, to allow us to include objectbase.h in wrap.h, 
	needed by the new templated method.
	* tools/m4/class_interface.m4: Use wrap_auto_interface<>() 
	instead of wrap_auto() for interfaces.

2007-09-06  Daniel Elstner  <danielk@openismus.com>

	* glib/src/regex.{ccg,hg} (Regex): Some cosmetic cleanup.  Also
	replace C-style casts in default argument values with static_cast<>.
	(escape_string): Wrap missing function.
	(match_full): Rename to and add as overloads of match().
	(match_all_full): Rename to and add as overloads of match_all().
	(split_full): Rename to and add as overloads of split().

2007-09-03  Daniel Elstner  <danielk@openismus.com>

	* glib/glibmm/ustring.cc (ustring::FormatStream::FormatStream): Use
	the global C++ locale instead of forcing the environment's locale
	onto the formatting stream.  This lifts an unnecessary restriction
	at the cost of requiring users to call std::locale::global().
	* glib/glibmm/ustring.h (ustring): Advertise the new compose and
	format API in the class documentation.
	(ustring::format): Correct a couple of cut'n'paste mistakes -- ouch.
	Also add two more overloads so that format() now takes up to eight
	arguments.  Extent the method documentation, too.
	(ustring::Stringify): Explicitly declare the class as noncopyable.
	(ustring::compose): Qualify calls to method ustring::compose_argv()
	in order to avoid surprising name lookup results in the context of
	the template instantiation.

	* docs/reference/Doxyfile.in (PREDEFINED): Add GLIBMM_HAVE_WIDESTREAM
	so that the wide stream I/O operators show up in the documentation.

2007-08-16  Jonathon Jongsma  <jjongsma@gnome.org>

	* docs/reference/glibmm_footer.html_fragment,
	docs/reference/glibmm_header.html_fragment: added <div> to doxygen header
	and footer to make it easier to integrate with library.gnome.org, per a
	request by Frederic Peters

2007-08-15  Daniel Elstner  <danielk@openismus.com>

	* glib/glibmm/ustring.{cc,h} (ustring::compose_argv): Rename
	"format" argument to "fmt" to avoid name clashes with the method
	of the same name.
	(ustring::compose): Make the type of each substitution parameter
	a template argument, and invoke ustring::format() implicitly for
	non-string arguments.  Explicit invocation of ustring::format() is
	still necessary in order to apply I/O manipulators to an argument.
	(ustring::Stringify): New auxiliary template class used in the
	implementation of ustring::compose().

	* examples/compose/main.cc (show_examples): Omit explicit calls
	to ustring::format() where possible.

2007-08-12  Daniel Elstner  <danielk@openismus.com>

	* examples/compose: New example demonstrating the message
	compose and format features.
	* examples/compose/main.cc: New file.
	* examples/compose/Makefile.am: New file.

	* examples/Makefile.am (example_dirs): Add compose directory.
	* configure.in (AC_CONFIG_FILES): Add examples/compose/Makefile.

2007-08-12  Daniel Elstner  <danielk@openismus.com>

	* build_shared/Makefile_build.am_fragment (all_includes): Add
	-I$(top_builddir) in order to allow <config.h> to be included.

	* glib/glibmm/ustring.{cc,h}: Include <config.h> for the
	definition of SIZEOF_WCHAR_T.
	(ustring::FormatStream::stream): Replace accessor with template
	method that passes its argument onto the stream.  Add overload
	for "const char*" to enable the use of UTF-8 string literals as
	arguments to ustring::format().
	(ustring::FormatStream::FormatStream): Handle exceptions on
	failure to initialize the locale gracefully.
	(ustring::format): Adapt to the modified stream() method.
	(operator<<): Add missing call to ustring::raw() to get the
	number of bytes instead of code points.  Oops.

2007-08-12  Daniel Elstner  <danielk@openismus.com>

	* glib/glibmm/ustring.{cc,h}: Add preliminary implementation of
	a message compose and format API (bug #399216).  The API design
	is not final and still open for discussion.
	(ustring::compose): New set of static methods for composing
	internationalized text messages by substituting placeholders
	in a template string.
	(ustring::format): New set of static methods for locale-dependent
	formatting of numbers and other streamable objects to strings.
	(ustring::compose_argv): New static method which implements the
	common functionality of the compose() overloads.
	(ustring::FormatStream): New helper class which implements the
	type-independent functionality of the format() templates.
	(operator>>): New operator overload for std::wistream.
	(operator<<): New operator overload for std::wostream.

2007-08-12  Daniel Elstner  <danielk@openismus.com>

	* scripts/dk-feature.m4: New file, defining M4 utility macros for
	feature testing.  These macros are part of my personal autoconf
	library and are not specific to glibmm, as indicated by the "DK_"
	namespace prefix.

	* configure.in (AC_INIT): Switch to the non-deprecated usage of
	AC_INIT() by passing project name and version number as arguments.
	This is necessary to define a couple of auxiliary macros.
	(AC_PREREQ): Bump Autoconf version requirement to 2.58.
	(AC_CONFIG_SRCDIR): Point to project-specific source file.
	(AC_CONFIG_MACRO_DIR): Declare scripts/ as M4 directory.
	(AM_INIT_AUTOMAKE): Switch to non-deprecated usage.
	(AC_CHECK_SIZEOF): Use to determine the size of wchar_t.
	(DK_CHECK_FEATURE): Use new feature test macro to check for
	support of wide-character streams.

	* config.h.in (SIZEOF_WCHAR_T): Add #undef template.
	* glib/glibmmconfig.h.in (GLIBMM_HAVE_WIDE_STREAM): Likewise.

2007-08-04  Daniel Elstner  <daniel.kitta@gmail.com>

	* containerhandle_shared.h (TypeTraits<bool>): Rewrite completely
	broken type adapter (bug #406960).
	* src/keyfile.{ccg,hg}: Fix the implementation to correctly use
	ArrayHandle<>.  Fix compilation with the new ArrayHandle<bool>
	code.

2.13.9:

2007-07-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/keyfile.hg:
	* glib/src/keyfile.ccg: Added a set_double() without the group_name 
	parameter, because the C function can take NULL.
	* glib/src/glib_docs_override.xml: Corrected the documnentation for 
	g_keyfile_set/get_double() to mention 2.14, instead of 2.12, 
	because we only added these to glibmm in 2.14.
	* glib/src/regex.hg: Correct the since documentation to be 2.14 
	not 2.12.
	* glib/src/iochannel.hg: read(): Corrected a parameter name to 
	match the generated documentation.
	* glib/glibmm/miscutils.h: Fixed typos in the use of newin2p14.

2007-07-28  Murray Cumming  <murrayc@murrayc.com>

	* docs/Makefile_web.am_fragment: Corrected the rsync options, to 
	match those used by gtkmm, to fix the examples upload.
	* glib/src/glib_docs.xml: Regenerated from the C documentation.

2007-07-14  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/keyfile.ccg:
	* glib/src/keyfile.hg: Added get_double(), set_double(), get_double_list() 
	and set_double_list().

2.13.8:

2007-07-07  Jonathon Jongsma  <jjongsma@gnome.org>

	* glib/src/optioncontext.ccg:
	* glib/src/optioncontext.hg: add some new API that was added in glib 2.12,
	including get/set_summary(), get/set_description(), set_translation_domain(),
	and set_translate_func().
	* glib/src/glib_docs.xml: Regenerated with docextract_to_xml.py
	* glib/src/glib_docs_override.xml: override docs for the new functions so
	that they say that they were introduced in glibmm 2.14 instead of 2.12

2007-07-02  Johannes Schmid <johannes.schmid@openismus.com>

	* glib/src/regex.hg:
	Added class documentation

2007-07-02  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/DocsParser.pm: convert_tags_to_doxygen():
	Handle newin markers for 2.12 and a few after that. 
	* docs/reference/Doxyfile.in: Added ALIASES for newin2p12 and 
	a few more.

2.13.7:

2007-06-22  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/main.cc:
	* glib/glibmm/main.h: Added SignalTimeout::connect_seconds() 
	as an equivalent for g_timeout_add_seconds() and took the improved 
	documentation from glib.

	* glib/glibmm/miscutils.cc:
	* glib/glibmm/miscutils.h: Added get_user_special_dir(), though we 
	should maybe wrap the enum.
	Reimplemented many of the functions with the 
	convert_return_gchar_ptr_to_stdstring() and 
	convert_const_gchar_ptr_to_stdstring() functions to simplify them 
	and make them handle NULLs properly.

2007-06-22  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/regex.ccg:
	* glib/src/regex.hg: Added a create() method, and added some 
	more default parameter values to the methods.

	* configure.in:
	* examples/Makefile.am:
	* examples/regex/main.cc: Added a very simple example.

	* glib/glibmm/value_custom.h: Put header guards around this, though 
	this should never be included directly anyway.

2.13.6:

2007-06-17  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/regex.hg:
	* glib/src/matchinfo.hg: Removed API that uses GMatchInfo, until we 
	wrap this properly, probably as a C++ iterator. This will avoid this 
	API accidentally being released as stable sometime.

2007-06-12  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/glib_enums.defs: Regenerated with enums.pl
	* glib/src/glib_functions.defs: Regenerated with h2defs.py

	* glib/src/Makefile_list_of_hg.am_fragment:
	* tools/m4/convert_glib.m4:
	* glib/src/matchinfo.ccg:
	* glib/src/matchinfo.hg:
	* glib/src/regex.ccg:
	* glib/src/regex.hg: Added the RegEx and MatchInfo classes.
	These need some examples to test them. The MatchInfo class is 
	probably particularly broken at the moment. See the TODO comments.

	* glib/glibmm.h: Added regex.h

2007-05-14  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_boxedtype.m4:
	* tools/m4/class_gobject.m4:
	* tools/m4/class_gtkobject.m4:
	* tools/m4/class_interface.m4:
	* tools/m4/class_opaque_copyable.m4:
	* tools/m4/class_opaque_refcounted.m4: Explicitly mention Glib::wrap() 
	in the documentation for generated Glib::wrap() functions, because doxygen 
	does not show their namespace.

2007-05-04  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/Function.pm: When generating example prototypes for 
	signal handlers, prefix them with on_my_, to avoid confusion with 
	similarly named functions and with on_*() default signal handlers.

2.13.5:

2007-04-30  Johannes Schmid <johannes.schmid@openismus.com>

	* tools/generate_wrap_init.pl.in:
	* tools/m4/class_gtkobject.m4:
	Use _IS_DEPRECATED instead of _CLASS_DEPRECATED because
	the latter confuses gmmproc.
	We cannot just use _DEPRECATED because it will result
	in incorrect handling of for example
	#ifndef GTKMM_DISABLE_DEPRECATED

2007-04-24  Yselkowitz <yselkowitz@users.sourceforge.net>

	* scripts/macros.m4: Check for both m4 and M4 in the GNU m4 output,
	to fix the build on some platforms.
	Bug #423990

2.13.4:

2007-04-11  Armin Burgmeier  <armin@openismus.com>

	* tools/pm/WrapParser.pm: Added peek_token() function which only
	returns the next token without removing it from the tokens array.
	Parse '/**' as a separate token and handle it in a special way so that
	when the final '*/' is encountered and _WRAP_SIGNAL follows, the
	comment is not terminated but continued by that automatically
	generated doxygen comment.

	* tools/pm/Output.pm: Added a merge_doxygen_comment_with_previous
	parameter in output_wrap_sig_decl(). If it is nonzero, the function
	assumes that there is already a comment open and continues to use it
	instead of opening a new comment by removing the leading '/**' from
	what get_refdoc_comment() returns. Bug #378810.

2007-04-06  Johannes Schmid <johannes.schmid@openismus.com>

	* tools/generate_wrap_init.pl.in:
	Use _CLASS_DEPRECATE instead of just _DEPRECATE to
	known whether a whole class should be avoided in wrap_init.
	Otherwise every .hg file containing deprecated methods
	might get ignored. (Fixes Gtk::TextBuffer bug in maemo)

2007-03-19  Bradley Bell  <btb@debian.org>

 	* glib/glibmm/helperlist.h: Change variable name to avoid
 	warnings about a shadowed member.
	Bug #420316.

2007-03-19  Bradley Bell  <btb@debian.org>

	* glib/glibmm/utility.h: remove g_free prototype, include gmem.h
	instead, to avoid a warning about a redundant declaration.
	Bug #420339.

2007-03-17  Armin Burgmeier  <armin@openismus.com>

	* tools/m4/signal.m4:
	* tools/m4/vfunc.m4: 
	Use static_cast in vfuncs and signal handlers to cast the
	wrapper object to ObjectBase*. This is enough to check whether the object is
	from a derived type or not. A slow dynamic_cast has only to be performed if it
	is derived, and the C++ vfunc needs to be called.
	* glib/glibmm/objectbase.h: This requires ObjectBase::is_derived_ to be public, 
	because it is called on a ObjectBase* rather than the actual type.
	This causes a slight speed up of vfuncs and default signal handler invokation.

	Also added commented-out inline versions of ObjectBase::_get_current_wrapper() and 
	ObjectBase::is_derived(), which could be used in the generated code if we find 
	that this has significant performance benefits. Note that these methods must be 
	additional to the non-inline methods, because inline methods are not usually exported in the 
	shared library. 

2007-02-10  Murray Cumming  <murrayc@murrayc.com>

	* examples/options/main.cc: Use a default value, to show that it 
	can be done.
	(This change, from 2006-03-30 was restored after being accidentally lost on Apr 12 2006)

2007-02-10  Armin Burgmeier <armin@arbur.net>

	* glib/src/optiongroup.ccg: default_c_arg(): Set the initial
	value of the C argument to the value the C++ argument has, to avoid
	that glibmm resets arguments to zero that were not given on the
	command line.
	(This change, from 2006-03-30 was restored after being accidentally lost on Apr 12 2006)

2007-01-28  Daniel Elstner  <daniel.kitta@gmail.com>

	* tools/m4/ctor.m4: If the argument list is empty, call the non-
	varargs overload of the Glib::ConstructParams constructor instead
	of using an empty varargs list.  This mistake was exposed thanks
	to the recent addition of G_GNUC_NULL_TERMINATED to the varargs
	constructor declaration.  Fortunately it was harmless in this case.
	Also use the opportunity to clean up the M4 code and prefix builtin
	M4 macros with m4_, so that we may get rid of the unprefixed macros
	altogether some day.

Thu, 25 Jan 2007 23:13:05 +0100 Dodji Seketeli

	* tools/m4/base.m4:
	  prefix the builting mkstemp with 'm4' because otherwise,
	  m4 1.4.8 recognizes it as a builtin macro and expands it, leading
	  to compilation errors on some distros.
	  This should fix #397167. Thanks to Daniel Elstner for spotting this.

2007-01-20  Daniel Elstner  <daniel.kitta@gmail.com>

	* glib/glibmm/dispatcher.{cc,h}: Early spring cleaning.  Also add
	a paragraph about Dispatcher on win32 to the documentation.
	(DispatchNotifyData): Remove the 'tag' member from the struct that
	was always set to 0xdeadbeef in order to detect memory corruption.
	This is pointless, as we already check the DispatchNotifier pointer
	sent across the pipe, which is a far better indicator of corruption
	anyway.
	(warn_failed_pipe_io): Remove the err_no parameter and retrieve
	errno respectively GetLastError() within the function instead.
	(DispatchNotifier::conn_io_handler_): Remove, as we now inherit
	from sigc::trackable.  I verified that this doesn't cause problems
	with threading in this particular case.
	(DispatchNotifier::DispatchNotifier): If creating the pipe failed
	and exceptions are disabled, call at least warn_failed_pipe_io()
	instead of doing nothing at all.
	(DispatchNotifier::*): Rework the win32 implementation so that it
	matches more closely the Dispatcher semantics on Unix.  This still
	needs testing by someone on win32, though.  So far I only verified
	that it compiles with dummy definitions of the win32 API.  Also,
	I accidentally located the real cause of the race condition Cedric
	experienced in bug #109966.  It was a bug in my patch, rather than
	in the example code.

	* examples/thread/dispatcher.cc: Cleanup.  In particular, get rid
	of the Glib::RefPtr<> abuse with non-Glib::Object types.  I don't
	believe we endorse such usage officially, so it shouldn't be in
	the examples.

2007-01-20  Daniel Elstner  <daniel.kitta@gmail.com>

	* glib/glibmm/miscutils.cc: Clean up the code a bit.
	(get_application_name): Remove the code that checked the string for
	valid UTF-8, and attempted conversion if not valid.  I must have
	been on crack when I wrote this, as the combination of conditions
	that would cause the string to be invalid UTF-8 is quite unlikely.
	If this is a valid concern at all, it should be filed as a GLib bug
	and not worked around in glibmm.
	(build_filename(const std::string&, const std::string&)): Just call
	the plain g_build_filename() instead of building a temporary array
	and passing that via ArrayHandle to the build_filename() overload
	for containers.
	(build_path): Remove the already deactivated custom implementation
	from the time before g_build_pathv() was added to GLib.

	* glib/glibmm/object.{cc,h}: Improve/fix a couple of comments.
	(ConstructParams::ConstructParams): Add G_GNUC_NULL_TERMINATED
	function attribute to make the compiler complain if the variadic
	argument list is not terminated by a NULL pointer.

	* glib/glibmm/ustring.{cc,h} (utf8_find_last_of): Avoid applying
	bitwise logical operators directly to (possibly signed) operands
	of char type.  In order to avoid relying on implementation-defined
	behavior, make sure that the operands are of unsigned integer type.
	(ustring::is_ascii): Likewise,
	(ustring_Iterator<T>::operator--): Likewise.
	(get_unichar_from_std_iterator): De-obfuscate this highly optimized
	piece of code, as the current stable release of GCC (4.1.2-pre on
	my system) generates better assembler output without the voodoo.

2.13.3:

2006-11-28  Daniel Elstner  <danielk@openismus.com>

	* tools/pm/GtkDefs.pm (read_defs): Allow an empty pair of
	parentheses in the innermost match.  This fixes the problem of
	gmmproc choking on "()" in the documentation strings.  This would
	still break on unmatched parentheses, though.  Of course the
	parser should just skip over quoted strings, but I wasn't able
	to get that to work.
	* glib/src/glib_enums.defs (GNormalizeMode): Manually fix the
	improperly parsed value of G_NORMALIZE_NFD.  Fortunately this
	doesn't change anything since the "#error" token was interpreted
	as zero, which happens to be the right value.
	* glib/src/glib_functions.defs (g_iconv): Manually convert to
	a function definition, as it was improperly parsed as a method
	with a zero-length name (!) of object GIConv.  This fixes the
	annoying gmmproc warning about an allegedly unwrapped method.

2006-11-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/propertyproxy_base.cc: Don't ifdef out 
	PropertyProxy_Base when properties are disabled. It is needed 
	for connect_property_changed().

2006-11-27  Daniel Elstner  <danielk@openismus.com>

	* tools/enum.pl (parse): Ignore whitespace in front of an enum
	typedef.  This fixes parsing of HildonTelephoneEditorFormat in
	hildon-libs.
	* tools/pm/Enum.pm (parse_values): Check whether the enumeration
	constants actually have a common module prefix before attempting
	to remove it.  This fixes the incorrect parsing of inconsistently
	named enums in hildon-libs.

2006-11-27  Daniel Elstner  <danielk@openismus.com>

	* tools/enum.pl (form_names): Break the loop if the length of the
	common prefix reaches zero.  This fixes the infinite loop when
	processing the inconsistently named enumeration constants of the
	Hildon libraries.

2006-11-20  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/libstdc++.tag.xml: Updated from the libstdc++ site. 
	Note that the original does not have an .xml extension. This is is 
	lots bigger, but that should mean there is more documentation now.

2006-11-22  Oliver Nittka  <oly@nittka.com>

	* glib/src/value_basictypes.cc.m4: When registering float parameters, 
	use -G_MAXFLOAT instead of G_MINFLOAT. Since we first implemented this, 
	the glib documentation has been updated to make it cleare that this is 
	the real minimum and G_MINFLOAT is the minimum positive value.
	Do the same for doubles too.

2006-11-10  Murray Cumming  <murrayc@murrayc.com>

	* tools/Makefile.am: Add enum.pl to the dist, so that it is in 
	tarballs. Someone saw it mentioned in the appendix, but could not 
	find it in the tarball.

2006-11-10  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/Doxyfile.in: Add PREDEFINES for the optional API, 
	so that the documentation shows the regular API.

2006-11-10  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/objectbase.cc:
	* glib/glibmm/objectbase.h: Added connect_property_changed(), 
	as an alternative to use when the property proxies are not 
	available because GLIBMM_PROPERTIES_ENABLED is not defined.
	SignalProxyProperty::connect(): Use notify::propertyname instead of 
	just notify, so do not have to check the property name later. This 
	should be more efficient (when this is used, rarely).
	* glib/glibmm/propertyproxy_base.cc:
	* glib/glibmm/propertyproxy_base.h: Move PropertyProxyConnectionNode
	into the header, so we can reuse it for connect_property_changed(). 

2006-10-04  Murray Cumming  <murrayc@murrayc.com>

        * glib/glibmm/class.cc:
        * glib/src/iochannel.ccg:
        * glib/src/markup.ccg: Add a silly line to avoid unused parameters
        when GLIBMM_EXCEPTIONS_ENABLED is not set.
        * glib/glibmm/error.h: Do not use G_GNU_NO_RETURN on the version
        of throw_exception() that returns, to avoid a warning.

2006-10-01  Murray Cumming  <murrayc@murrayc.com>

	* Makefile.am:
	* docs/Makefile.am:
	* docs/Makefile_web.am_fragment:
	* docs/images/Makefile.am:
	* docs/reference/Makefile.am:
	* docs/reference/README:
	* examples/Makefile.am: Upload to the new hoster instead of to sourceforge.
	Abstracted the host and path names into docs/Makefile_web.am_fragment to 
	avoid duplication.

2.13.2:

2006-09-28  Cedric Gustin  <cedric.gustin@gmail.com>
	
	* MSVC_Net2003/glibmm/glibmm.vcproj: Remove sarray from list of
	source and header files.

2006-09-26  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmmconfig.h.in: For win32, define 
	GLIBMM_ARG_ENABLE_API_DEFAULT_SIGNAL_HANDLERS to 1, 
	instead of just defining it to nothing.
	* scripts/reduced.m4: In the AC_ARG_ENABLE() to 
	define (or not) GLIBMM_ARG_ENABLE_API_DEFAULT_SIGNAL_HANDLERS, 
	use api-default-signal-handlers as the first parameter 
	instead of api-exceptions (a copy/paste error), though it does 
	not seem to make any difference.
	Bug #357830.

2006-09-23  Jonathon Jongsma  <jonathon.jongsma@gmail.com>

	* glib/src/keyfile.ccg, glib/src/keyfile.hg: added new files that were
	missed from an earlier commit

2.13.1:

2006-09-19  Ralf Stephan  <ralf@ark.in-berlin.de>

	* glib/glibmm/ustring.h: 
	ustring(const ustring& src, size_type i, size_type n=npos)
	and 
	ustring(const char* src, size_type n) constructors:
	In the reference documentation, mention explicitly that 
	n is the number of _UTF-8_ characters, rather than 
	ASCII characters (bytes).

2006-02-20  Rob Page  <page.rob@gmail.com>

	Wraps GKeyFile (Bug #330535)
	* glib/glibmm.h: Added include of keyfile.h
	* glib/glibmm/Makefile.am: Added keyfile.h
	* glib/glibmm/containerhandle_shared.h: Added a TypeTraits
	specialization for converting between bool and gboolean*.
	* glib/src/Makefile_list_of_hg.am_fragment: Added keyfile.hg
	to files_general_hg.
	* glib/src/keyfile.hg: KeyFile header
	* glib/src/keyfile.ccg: KeyFile implementation
	* tools/m4/convert_glib.m4: Added a conversion for KeyFileFlags

2006-09-14  Johannes Schmid <jhs@gnome.org>

	* tools/m4/class_shared.m4: Change _IMPLEMENTS_INTERFACE to 
	_IMPLEMENTS_INTERFACE_CC so we can have more control over it, 
	by generating the _IMPLEMENTS_INTERFACE_CC from the WrapParser.pm.
	* tools/m4/method.m4:
	* tools/m4/signal.m4:
	* tools/m4/vfunc.m4: Added optional parameters that result in 
	#ifdefs around methods, signals, vfuncs, etc.
	* tools/pm/Output.pm: Addef ifdef() and endif().
	output_wrap_vfunc_h(), output_wrap_vfunc_cc(),
	output_wrap_default_signal_handler_h(), 
	output_wrap_default_signal_handler_cc(),
	output_wrap_meth(),
	output_wrap_create(),
	output_wrap_sig_decl(): Support optional ifdefs around  
	declarations and implementations, by calling ifdef() and endif(), 
	or by passing the extra argument to the m4 macros.
	* tools/pm/WrapParser.pm: parse_and_build_output(): 
	Parse _IMPLEMENTS_INTERFACE, and call the new on_implements_interface() 
	method, which uses the new output_implements_interface() method, 
	so it can have an optional ifdef parameter.
	on_wrap_method(), on_wrap_create(), on_wrap_vfunc(), output_wrap_signal(),
	output_wrap_vfunc(): Handle the optional ifdef (with a parameter) option 
	for the _WRAP*() macros.

	This adds support for disabling certain features by using the new
	"ifdef" argument for methods, vfuncs, signals and interfaces.

2006-09-05  Jonathon Jongsma  <jonathon.jongsma@gmail.com>

	* docs/reference/Makefile.am: rebuild docs when a .h files changes in
	glib/glibmm
	* glib/glibmm/miscutils.cc:
	* glib/glibmm/miscutils.h: wrap g_get_user_data_dir(),
	g_get_user_config_dir(), and g_get_user_cache_dir()

This is the HEAD branch, for new API. There is also a glib-2-12 branch for 
maintenance of the stable API.

2006-08-18  Cedric Gustin  <cedric.gustin@gmail.com>
	
	* MSVC_Net2003/*.vcproj: Updated for glibmm-2.12.

2.12.0:

2.11.3:

2006-04-25  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* glib/glibmmconfig.h.in:
	* scripts/reduced.m4: Added a --enable-api-default-signal-handlers option. This defines 
	GLIBMM_DEFAULT_SIGNAL_HANDLERS_ENABLED, which is used to #ifdef default signal handlers.
	This saves on library code size (less code and API symbols) and application code size and 
	loading time (less virtual methods, which must be imported and resolved at load time) and 
	per-object memory size (smaller object sizes because of less virtual methods.) 
	* tools/m4/class_interface.m4:
	* tools/m4/class_shared.m4: Put default signal handler code in #ifdefs.

2.11.2:

2006-07-17  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Reverted the previous patch slightly to unbreak glibmmconfig.h.

2.11.1:

2006-07-16  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Quote GLIBMM_*_VERSION to avoid m4 warnings. Patch from 
	Bug #347076 from Kevin McBride.
	* scripts/sun.m4: Quote GLIBMM_PROG_CXX_SUN to avoid an m4 warning. 
	Patch from Bug #347077 from Kevin McBride.  

2006-07-16  Jonathon Jongsma  <jonathon.jongsma@gmail.com>

	* glib/src/date.ccg: fix implementation of Glib::Date::set_time_current() so
	that it doesn't set the date to Dec 31, 1969.

2006-06-19  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/object.h: Check whether DestroyNotify is defined, so we can warn about 
	including X11/Xlib.h before this header, which will break things. 
	Bug #316726 from Mert Tugcu and Javeed Shaikh.

2006-06-09  Cedric Gustin  <cedric.gustin@gmail.com>

	* glib/glibmm/objectbase.h : Inline the set_property and
	get_property methods. This is required by mingw32-gcc as
	ObjectBase is explicitly dllexported.

2006-06-05  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/convert.ccg: When using --enable-api-exception=no, only try to get the Glib::Error 
	when the GError is not null.

2006-05-18  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/method.m4: _METHOD(): When using errthrow, actually print the function call even if 
	the return type is 0.

2006-05-16  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/method.m4:  _METHOD(), _STATIC_METHOD(): Remove spaces before dnl statements, 
	to avoid unwanted indentation in .cc files.

2006-05-16  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/convert_base.m4: _CONVERT(): If the return type is void, use the unconverted 
	statement, not no statement. This prevents some void methods from being totally empty. 
	This was a (very bad) regression introduced by the optional API changed. 
	Bug #341895 from Philip Langdale.
	* tools/m4/method.m4: _METHOD(), _STATIC_METHOD(): Attempt to remove unnecessary newlines, 
	though some indenting spaces slipped in instead. Must fix that. 

2006-05-14  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/value.cc:
	* glib/glibmm/value.h: Restored the init(GValue*) method that was lost when 
	merging changes from the glibmm-2-10 branch.

2006-05-09  Murray Cumming  <murrayc@murrayc.com>
 
	* glib/glibmm/ustring.cc:
	* glib/src/date.ccg:
	* glib/src/convert.ccg:
	* glib/src/convert.hg: Added #ifdefed versions for the case that 
	exceptions are disabled.

2006-05-10  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* scripts/reduced.m4: Moved --enable-deprecated-api macro into scripts/reduced.m4.
	Added the --enable-api-exceptions macro that was missing from my last commit.

2006-04-05  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* scripts/reduced.m4: Added --enable-api-exceptions option. When this 
	is used, methods that would normally throw an exception will now take 
	an extra std::auto_ptr<Glib::Error> argument that should be checked with 
	auto_ptr::get().
	* glib/glibmmconfig.h.in: Undef the GLIBMM_EXCEPTIONS_ENABLED, 
	so it will be defined.
	* tools/m4/gerror.m4: throw_func() returns an auto_ptr of a 
	Glib::Error when exceptions are disabled.
	* tools/m4/method.m4:
	* tools/pm/Output.pm: on_wrap_method(): Added alternative API with 
	#ifdefs
	* tools/m4/signal.m4:
	* tools/m4/signalproxy_custom.m4:
	* tools/m4/vfunc.m4: Put #ifdefs around the exception re-throwing 
	try/catch blocks.
	* glib/glibmm/dispatcher.cc:
	* glib/glibmm/dispatcher.h:
	* glib/glibmm/error.cc:
	* glib/glibmm/error.h:
	* glib/glibmm/exceptionhandler.cc:
	* glib/glibmm/exceptionhandler.h:
	* glib/glibmm/main.cc:
	* glib/glibmm/signalproxy.cc:
	* glib/glibmm/streamiochannel.cc:
	* glib/glibmm/stringutils.cc:
	* glib/glibmm/threadpool.cc:
	* glib/src/iochannel.ccg:
	* glib/src/iochannel.hg:
	* glib/src/markup.ccg:
	* glib/src/spawn.ccg:
	* glib/src/thread.ccg: Put #ifdefs around try/catch blocks, and 
	use alternative API when appropriate.
	* examples/iochannel_stream/fdstream.cc:
	* examples/markup/parser.cc:
	* examples/options/main.cc: Adapted examples to 
	the alternative API, with #ifdefs
	* tools/m4/convert_base.m4: Avoid any conversion if the result is 
	void, to allow _WRAP_METHOD() to ignore bool results, so we can 
	generate some methods that are currently hand-coded.

2006-05-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/value.cc:
	* glib/glibmm/value.h: Added init(const GValue*), so that we can copy GValue instances 
	of any type at runtime. Needed by libgdamm, which returns const GValue* instances.

This is the HEAD branch, for API additions. See also the glibmm-2-10 branch.

2.10.1:

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/signalproxy_custom.m4: Remove this file because it is not installed and 
	does not seem to be used.

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/signal.m4: Mark the (private) signal info callback functions as 
	static, to save on code size. 

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/WrapParser.pm: Parse a new optional constversion parameter for 
	_WRAP_METHOD(), to save on code size by just calling the non-const overload 
	instead of generating almost identical code.
 	* tools/m4/method.m4: _METHOD(): Take extra parameters for use when constversion is used.
	* tools/pm/Output.pm: Send the extra parameters to _METHOD().
	* docs/internal/using_gmmproc.txt: Documented the new constversion option.

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/main.cc:
	* glib/glibmm/objectbase.cc:
	* glib/glibmm/property.cc:
	* glib/glibmm/ustring.cc:
	* glib/glibmm/value_custom.cc: 
	* glib/src/spawn.ccg: Mark private functions as 
	static, to stop them being exported in the API, to reduce the 
	library code size slightly.
	* tools/m4/signal.m4: Make generated callback functions static, for 
	the same reasons.

2006-04-07  Cedric Gustin  <cedric.gustin@gmail.com>

	* README.win32: Updated for Mingw-4.1.

2006-04-06  Cedric Gustin  <cedric.gustin@gmail.com>

	* MSVC_Net2003/*.vcproj: Embed the manifest file into executables
	in the case of the Debug target.
	* README.win32: Fixed a few typos.
	* build_shared/Makefile_build.am_fragment: Add -DGLIBMM_BUILD to
	the extra_defines compiler flags (switch between
	dllexport/dllimport on win32).
	* glib/glibmmconfig.h.in: Define GLIBMM_DLL when building with
	mingw32/cygwin. This makes the GLIBMM_API tag (and GTKMM_API for
	gtkmm) active with these two platforms, as required by bug
	#309030.  
	* glib/glibmm/object.h, glib/glibmm/objectbase.h : Tag the Object
	and ObjectBase classes with GLIBMM_API to make Visual Studio happy.

2.10.0:

2006-02-25  Murray Cumming  <murrayc@murrayc.com>
 
	* tools/pm/DocsParser.pm: looklookup_documentation(): Put the 
	@deprecated text immediately after the main description, before 
	the parameters, so that Doxygen actually uses it.
 
2006-02-25  Murray Cumming  <murrayc@murrayc.com>
 
	* tools/pm/DocsParser.pm: looklookup_documentation(): Accept an 
	extra deprecated_documentation parameter, to be appended to the 
	Doxygen documentation.
	* tools/pm/Output.pm: output_wrap_meth(): Put the documentation 
	inside the deprecation #ifdef, for neatness.
	* tools/pm/WrapParser.pm: on_wrap_method(): Read an optional string 
	after the optional deprecated parameter, used to say why the 
	method is deprecated, in case it was not deprecated by the C API, 
	in which case it would already have documentation for this.

2006-02-27  Cedric Gustin <cedric.gustin@gmail.com>

	* README.win32: Updated for glibmm-2.8 (MS Visual Studio 2005).
	* glib/glibmm/ustring.h: Tag npos with GLIBMM_API, in order to
	dllexport it on win32. Bug #332438.
	* MSVC_Net2003/*.vcproj: Updated for Visual Studio 2005. Added the
	/vd2 compiler flag (Bug #158040).
	* MSVC_Net2003/glibmm.sln: Updated for Visual Studio 2005.
	* MSVC_Net2003/gendef/gendef.cc: Redirect output of dumpbin to a
	file.
	* glib/glibmmconfig.h.in: Undefined
	GLIBMM_HAVE_ALLOWS_STATIC_INLINE_NPOS for MSVC.

2006-02-03  Murray Cumming  <murrayc@murrayc.com>

	* docs/internal/using_gmmproc.txt: Section about regenerating .defs:
	Repeat the hint about extra_defs_gen here.

2006-02-27  Cedric Gustin <cedric.gustin@gmail.com>

	* glib/glibmm/ustring.h: Tag npos with GLIBMM_API, in order to
	dllexport it on win32. Bug #332438.

2006-02-07  Rob Page  <page.rob@gmail.com>

	* glib/glibmm/ustring.h: fix a typo in the documentation for uppercase()

2.9.1:

2006-01-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optiongroup.ccg: add_entry_with_wrapper(): Copy the 
	CppOptionEntry into the map _after_ setting entry_ so that we 
	really delete it in release_c_arg(), to avoid a memory leak.

2006-01-28  Rob Page <rob@gmail.com>

	* docs/reference/glibmm_header.html_fragment: Fix the link 
	to the Main page. Bug #328299.

2006-01-27  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.ccg: Constructor: Avoid memory 
	leak caused by double instantiation of gobject_.

2005-12-16  Murray Cumming <murrayc@murrayc.com>

	* glib/glibmm/object.h:
	* glib/glibmm/objectbase.h: Hide some internal stuff 
	from Doxygen. Add/Improve the Doxygen documentation.
	* glib/src/convert.hg: Correct the declaration of 
	filename_display_name() to match the implementation. 
	Previously this would have been unusable due to a linker 
	error.

2005-11-30  Murray Cumming <murrayc@murrayc.com>

	* docs/reference/Doxyfile.in: Define the @newin aliases, 
	as in gtkmm.
	* tools/pm/DocsParser.pm: Convert Since: in gtk-doc 
	text to @newin for our doxygen docs.

2005-11-29  Murray Cumming <murrayc.com>

	* build_shared/Makefile_build.am_fragment:
	* configure.in: Added --enable-use-deprecations, 
	defaulting to no (do not check for them), so that 
	the tarball will still build when newer versions 
	of glib deprecate some API. 
	* examples/Makefile.am_fragment: Use the 
	deprecation, if wanted.

2005-11-29  Murray Cumming <murrayc@murrayc.com>

	* build_shared/Makefile_build.am_fragment:
	* configure.in: Added --enable-deprecated-api 
	option. When set to disabled, it does not build 
	deprecated API. This reduces the size of the library, 
	and might be useful for embedded devices.
	* glib/src/date.ccg:
	* glib/src/date.hg: Use _DEPRECATE_IFDEF_START/END 
	around the deprecated set_time() method.

2005-11-29  Murray Cumming <murrayc@murrayc.com>

	* tools/m4/base.m4: Add 
        _DEPRECATE_IFDEF_START and _DEPRECATE_IFDEF_END 
	macros, to #ifdef-out generated methods. 
	Added _DEPRECATE_IFDEF_CLASS_START and 
	_DEPRECATE_IFDEF_CLASS_END for whole classes. 
	Put _DEPRECATE_IFDEF_CLASS* around all generated 
	code. It does nothing if the class is not deprecated.
	* tools/m4/class_gtkobject.m4: Add _DEPRECATED macro, 
	used to mark a class as deprecated.
	* tools/m4/method.m4: Take an extra parameter, to 
	optionally mark the method as deprecated, to add 
	#ifdefs around the code, with 
	_DEPRECATE_IFDEF_START/END
	* tools/pm/Output.pm: _DEPRECATE_IFDEF_START/END 
	around the declarations of deprecated methods.
	* tools/pm/WrapParser.pm: Check for an optional 
	deprecated parameter to _WRAP_METHOD(). 
	* tools/m4/member.m4: Allow optional deprecated 
	method for _MEMBER_GET/SET*() to ifdef the code 
	out.
	* tools/generate_wrap_init.pl.in: Put an #ifdef 
	around use of deprecated classes.

2005-11-23  Murray Cumming <murrayc@murrayc.com>

	* configure.in: Depend on glib 2.9, which 
	has new API.
	* glib/src/date.ccg:
	* glib/src/date.hg: Wrap glib_date_set_time_t() 
 	and glib_date_set_time_val(). Deprecate  
	set_time(GTime) in favour of the new method 
	overloads. Added set_time_current(), wrapping the 
	case that the time_t is 0.

This is the HEAD branch, for new API, targetting glib 2.9. See also the 
glibmm-2-8 branch.

2.8.2:

2005-11-23  Murray Cumming <murrayc@murrayc.com>

	* glib/glibmm/containers.h: Do not use g_assert() in 
	a header, because g++ sometimes warns that it has 
	no effect.

2005-10-29  Murray Cumming <murrayc@murrayc.com>

	* scripts/macros.m4: AL_PROG_GNU_MAKE(): 
	Use $MAKE-make instead of $ac_make, which 
	apparently fixes a build problem on some 
	Solaris systems. Thanks to Mark Rouchal in 
	bug #307480.

2.8.1:

2005-10-19  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Check for glib 2.8. Bug #317913.

2.8.0:

Updated NEWS and increased version to 2.8.0.

2.7.3:

2005-08-17  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/glib_docs.xml: Regenerated with docextract_to_xml.py
	* glib/src/glib_enums.defs: Regenerated with enums.pl
	* glib/src/glib_functions.defs: Regenerated with h2defs.py

2.7.2:

2005-07-16  Murray Cumming <murrayc@murrayc.com

	* glib/glibmm/miscutils.cc: Reimplemented build_filename() and 
	build_path() with the new non-vararg functions in glib 2.7, 
	instead of implementing them in gtkmm.
	* glib/src/glib_enums.defs: Regenerated with enums.pl
	* glib/src/optionentry.hg: Added FLAG_NO_ARG, FLAG_FILENAME, 
	FLAG_OPTIONAL_ARG, and FLAG_NOALIAS enum values.


2.7.1:

2005-06-08  Murray Cumming <murrayc@murrayc.com

	* glib/glibmm/propertyproxy.h: 
	PropertyProxy_ReadOnly<>::get_value(),
  	PropertyProxy_WriteOnly<>::set_value(): Add implementations 
	instead of casting to unrelated PropertyProxy() and calling it 
	there. The AIX compiler did not like this hack. Bug #301610

2005-06-07  Cedric Gustin <cedric.gustin@swing.be>

	* glib/glibmm/miscutils.cc: In get_home_dir, return an empty
	string when HOME is not defined (Win9x). Bug #306310 from Michael
	Hofmann.
	* glib/glibmm/miscutils.h: Updated docstring for the get_home_dir
	method.

2005-04-27  Murray Cumming <murrayc@murrayc.com>

	* examples/child_watch/main.cc:
	* examples/thread/dispatcher.cc:
	* examples/thread/thread.cc:
	* glib/glibmm/dispatcher.cc: Inherit signal handler objects from 
	sigc::trackable. This is necessary with some libsigc++ patches, 
	though not currently necessary with regular libsigc++.

2005-04-22  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/gmodule_enums.defs: Regenerate with enums.pl
	* glib/src/gmodule_functions.defs: Regenerate with h2defs.py
	This adds the BIND_LOCAL enum value. Bug #172748 from 
        Phillip Neiswanger.

2005-04-05  Murray Cumming  <murrayc@murrayc.com>

	* tool/pm/Output.pm: output_wrap_property(): Do not add the 
	const read-only method override if the property can not be read. Be 
	careful because this removes a little API from generated code. You 
	should hand-code the wrongly-generated methods and mark them as 
	deprecated.
	* glib/glibmm/refptr.h: Added cast_const<>, like the existing 
	cast_dynamic<> and cast_static.

2005-03-31  Murray Cumming <murrayc@murrayc.com>

	* glib/src/glib_functions.defs: Updated with 
	h2defs.py.

2005-03-13  Yair Hershkovitz <yairhr@gmail.com>

	* glib/glibmm/main.h,
	glib/glibmm/main.cc: Added MainContext::signal_child_watch()
	* examples/: Added child_watch/ example   
  
2005-03-11  Yair Hershkovitz <yairhr@gmail.com>

	* glib/glibmm/main.h, glib/glibmm/main.cc: 
	Add Glib::SignalChildWatch class, Glib::signal_child_watch()

This is the HEAD branch, for new API. Bug fixes that do not change or add 
API should also be applied to the glibmm-2-6 branch.

2005-03-09  Cedric Gustin <cedric.gustin@swing.be>

	* MSVC_Net2003/Makefile.am: Add blank.cpp to EXTRA_DIST.
	* MSVC_Net2003/glibmm/glibmm.vcproj: Remove sarray.cc from the
	list of source files.
	* MSVC_Net2003/examples/*/*.vcproj,
	MSVC_Net2003/tests/glibmm_value/glibmmvalue.vcproj: Change name of
	PDB file to $(OutDir)/$(TargetName).pdb. 
	
2.6.1:

2005-03-07  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/interface.cc: Disable the new check for pre-existing 
	interface implementations, because it checks all base gtypes and 
	not just the current gtype. Bug #169442 by Bryan Forbes.

2.6.0:

2.5.6:

2005-02-18  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/interface.cc: Interface_Class:add_interface(), used by 
	add_interface() methods of Interfaces: Do not add interfaces that 
	have been added before, to avoid the warning from glib. This 
	allows application code to be simpler.

2005-02-18  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/Output.pm: Add the documentation to the const property() 
	accessor as well as the non-const one.

2005-02-13  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_extra_defs.cc: Use 
	g_param_spec_get_blurb() to output the documentation for the 
	properties in the .defs file.
	* tools/m4/property.m4: Take an extra docs argument, and put it in the 
	doxygen docs.
	* tools/pm/Output.pm: Add the extra docs argument when calling the 
	property m4 macro.
	* tools/pm/Property.pm: Read in the new docs part of the .defs, and 
	add a period at the end if neccessary.

2005-02-01  Murray Cumming  <murrayc@murrayc.com>

	* examples/threadpool.cc, dispatcher.cc, dispatcher2.cc: Removed the 
	#ifdef for AIX, because sigc::bind now works on AIX.

2005-01-27  Cedric Gustin <cedric.gustin@swing.be>

	* MSVC_Net2003/glibmm/glibmm.rc.in: Reverted to 2.4 for the
	library version number.

2.5.5:

2005-01-26  Cedric Gustin <cedric.gustin@swing.be>

	* MSVC_Net2003/glibmm/glibmm.vcproj: Reverted to 2.4 for the
	library version number.

2005-01-24  Cedric Gustin <cedric.gustin@swing.be>

	* Makefile.am, configure.in: Added MSVC_Net2003 directory.
	* config.h.in: Added mkfifo #define (for mingw32).
	* glib/glibmmconfig.h.in: Added new #define's to MSVC section.
	* examples/iochannel_stream/Makefile.am: Do not build on win32
	with mingw32 (mkfifo not available).
	* scripts/cxx_std.m4: Fixed typo in AC_DEFINE macros.
	* build_shared/Makefile_build.am_fragment: Removed
	$(sublib_name)_COMPILATION variable (is useless now on
	cygwin/mingw as all symbols are dll exported).
	* MSVC_Net2003/*: Initial commit imported from glibmm-2-4 branch.
	* MSVC_Net2003/glibmm/Makefile.am: Rewrote rule for local copy of
	glibmmconfig.h (required for 'make distcheck').

2005-01-21  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, scripts/cxx.m4, glibmm/glibmmconfig.h.in: Added new 
	compiler tests to see whether extern "C" functions are put in the 
	global namespace, even when we use extern "C" inside a namespace 
	declaration. The AIX xlC compiler does this, but allows us to 
	redeclare the namespace inside the extern "C" block.
	* glib/glibmm/property.h: Use the new 
	#ifdef GLIBMM_MUST_REDECLARE_NAMESPACES_INSIDE_EXTERNC and redeclare 
	the namespace when necessary.
	* examples/thread/dispatcher.cc, dispatcher2.cc: Use sigc::bind<1> 
	instead of just sigc::bind<> because the AIX xlC compiler needs the 
	extra hint. However, the linker then fails, so the use of sigc::bind 
	is ifdefed out for _AIX. See the comments in the code.
	
2005-01-21  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, scripts/cxx.m4, glibmm/glibmmconfig.h.in: Added new 
	compiler tests.
	1. To see whether it allows use of non extern C functions 
	as extern C callbacks, because the Tru64 compiler does not 
	allow this, when using strict_ansi. We do not actually use this yet.
	2. To see whether it allows us to define a template that uses an 
	undefined type, even if we do not use it before defining the type. 
	Tru64 does not allow this. That's probably correct. 
	* glib/glibmm/container.h: #ifdef out a dynamic_cast that Tru64
	does not allow, and which I can not think of a better place to put.
	See the comment in the code.
	* glib/glibmm/containerhandler_helpers.h: When the compiler does not 
	alllow the GObject and GtkObject (dynamic_cast of) specializations 
	here, then put them in glib/glibmm/object.h and 
	gtkmm/gtk/src/object.hg instead.- needed by Tru64 compiler.
	* glib/glibmm/value.h, value_custom.[h|cc]: Conditionally moved 
	the RefPtr Value specialization into object.h, as above.
	* glib/src/ optiongroup.ccg, spawn.ccg, thread.ccg: Make C callacks 
	separate extern "C".
	* glib/src/optiongroup.ccg: Do not use the StringArrayHandle, 
	because the Tru64 compiler has problems with it - see comments 
	in code.
	* glib/src/optionentry.hg: Remove the include of value.h, because 
	it is not used and it causes a Tru64 compile error in 
	optioncontext.cc because its templates are included before the 
	types that the template uses.

2005-01-19  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, scripts/cxx.m4, glibmm/glibmmconfig.h.in: Added a 
	compiler test, because the IRIX MipsPro compiler does not allow the 
	inline initialization of ustring::npos.
	* glib/glibmm/ustring.[h|cc]: When the compiler does not support the 
	inline initialization of npos, initialize it in the .cc file.
	Declare partial specializations of the SequenceString inner class 
	inside the class - needed by IRIX MipsPro compiler. 

2005-01-18  Murray Cumming  <murrayc@murrayc.com>

	* glibmm/src/optiongroup.[hg|ccg]: CppOptionEntry::convert_c_to_cpp(): 
	Copy the strings to the vector in a loop, instead of using the 
	ArrayHandle constructor, because that does not seem to work with the 
	SUN Forte compiler.

2.5.4:

2005-01-10  Murray Cumming  <murrayc@murrayc.com>

	* glibmm/src/optiongroup.[hg|ccg]: Added a castitem constructor 
	that always takes ownership, needed by Gtk::Main. Added the new 
	FLAG_REVERSE flag value. Added reference documentation.

2.5.3:

2005-01-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/misc_utils.[h|cc]: Added setenv() and unsetenv(), 
	wrapping new functions added in glib 2.4.
	* glib/src/convert.[hg|ccg]: Added filename_display_name() and 
	filename_display_basename().

2005-01-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.ccg: Copy constructor: Copy the short name 
	form the src, not from itself. Bug #16331 from Daniel Holbach.

2005-01-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.[hg|cc]: Add add_entry(entry, bool&), to wrap 
	use of G_OPTION_ARG_NONE. Bug #163325 from Daniel Holbach.
	* examples/options/main.cc: Use the new add_entry() overload.

2005-01-06  Benoît Dejean  <TazForEver@dlfp.org>

	* glib/glibmm/dispatcher.cc:
	* glib/glibmm/error.cc:
	* glib/glibmm/exceptionhandler.cc:
	* glib/glibmm/main.cc:
	* glib/glibmm/threadpool.cc:
	* glib/glibmm/ustring.cc:
	* glib/glibmm/wrap.cc: Don't export private API.
	Closes #163031.

2005-01-04  Chris Vine <chris@cvine.freeserve.co.uk>
	
	* examples/iochannel_stream/: Provide a means of obtaining
	Glib::IOChannel error information from the streambuffer.  Remove
	the code conversion option from the fdstream/fdstreambuf
	constructors and add comments in fdstream.h about code conversion
	and other matters.  Add a detach() function and a destructor to
	fdstreambuf.  Correct an error in fdstreambuf::xsgetn().  Include
	missing <string> header file in main.cc.

2.5.2:

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	* examples/: Adapted and added iochannel_stream example from 
	Chris Vine in bug #138259.

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/: Added glib_docs.xml, generated with docsextract_to_xml.py 
	and glib_docs_override.xml, to generate some API reference from 
	the C docs.
	* glib/src/Makefile.am: Mention the new files.

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/: Added a copy of the libstdc++ doxygen tags file, 
	but it still does not seem to work, for example with std::vector<> 
	and std::string.

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/Doxyfile.in: Use the libstdc++ TAG files, so that 
	references to std:: classes take people to their docs.
	* glib/src/: Added glib_docs.xml and glib_docs_override.xml, and 
	mentioned them in Makefile.am.

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/date.hg, glib/glibmm/main.h, 
	glib/glibmm/signalproxy_connectionnode.h: Deal with some doxygen 
	warnings about undocumented parameters.
	* glib/glibmm/ustring.h: Added documentation for the size() and 
	bytes() methods. 

2004-11-21  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.[hg|ccg]: Removed OptionEntry enum and 
	set_arg_data(), because they are not needed any more.

2.5.1:

2004-11-01  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optiongroup.[hg|ccg]: Added add_entry() for vector<ustring> 
	and add_entry_filename() for std::string and vector<std::string>.
	* examples/options/main.cc: Test these new methods.

2004-10-30  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optiongroup.[hg|ccg]: Added gobj_give_ownership().
	* glib/src/optioncontext.[hg|ccg]: add_group(), set_main_group(): Use 
	gobj_give_ownership() because GOptionContext deletes the GOptionGroups 
	that we give it.

2004-10-26  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.hg: Remove accessors for arg and arg_data.
	* glib/src/optiongroup.[hg|ccg]: add_entry(): Remove arg_type parameter
	and instead add overrides which take specific C++ value types. 
	Add CppOptionEntry inner class to hold information about each entry 
	and its dynamically allocated C value.
	Add map_entries_ map to store them, so we can iterate over them during 
	post_parse.

2004-10-21  Murray Cumming  <murrayc@murrayc.com>

	* build_shared/Makefile_build.am_fragment: Patch from Roger Leigh in 
	bug # 15589 to use PLATFORM_WIN32 rather than OS_WIN32 to enable 
	-no-undefined. This allows glibmm to build in a cgwin environment, 
	apparently.

2.5.0:

2004-10-17  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optioncontext.[hg|ccg]: add_entry(): Fixed crash by 
	creating a temporary array, with a nulled last item, which is what the 
	C function wants. In callbacks, ignore the group parameter because our 
	option group in the data parameter is the same, and does not require 
	construction of a second C++ wrapper instance for the same C instance.
	* glib/src/optiongroup.[hg|ccg]: Removed the cast constructor, because 
	it is not needed anymore, and there is no clear way to implement it.

2004-10-14  Murray Cumming  <murrayc@murrayc.com>
 
 	* tools/pm/WrapParser.pm: on_wrap_property(): Convert property name to 
 	canonical form, so that we can recognise notifications of property 
 	value changes. Bug #152764.

2004-10-07  Philip Langdale  <plangdale@vmware.com>

	* glib/glibmm/signalproxy_connectionnode.cc: Remove unnecessary warning
	when notify() is called after destroy_notify_handler(). (bug #154498)

2004-10-01  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/option*.[hg|ccg], examples/options/main.cc: Rethought the 
	structure now that I see how the parts work together. Rearranged the 
	example to show how the parsing can fill values in member variables 
	of a derived OptionGroup class. However, 1. it crashes now, 2. we need 
	extra code to map the GOption C types to suitable C++ types, probably 
	by doing pre and post parsing to create temporary C types for the C++ 
	types.

2004-09-27  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/option*.[hg|ccg]: Wrapped more methods, but I have still not
	finished.
	* examples/options/: Started an example.

2004-09-26  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/glib_functions.defs: Regenerated with h2defs.py
	* glib/src/: Added optionentry.[hg|ccg], optiongroup.[hg|ccg], 
	optioncontext.[hg|ccg].

2004-09-19  Murray Cumming  <murrayc@murrayc.com>

	* This is the HEAD branch.

2004-09-13  Cedric Gustin <cedric.gustin@swing.be>

	* examples/thread/dispatcher.cc: Fixed a race condition on win32
	that involved the combined use of auto_ptr and multithreading (bug
	#109966). 

2.4.4:

2004-07-23  Martin Schulze  <mschulze@cvs.gnome.org>

	* glib/glibmm/main.cc: Move deletion of SourceConnectionNode object
	into destroy_notify_callback() exclusively; do not delete from 
	notify().
	(bug #144420)

2004-07-10  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/signalproxy_connectionnode.cc: notify(): Do not delete 
	the connection after disconnecting it, because disconnecting it 
	always causes disconnect_notify to be called, so just delete it there.
	This prevents double deletes and reading of deleting memory, found in 
	bug #145571.

2004-07-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/signalproxy.h.m4: Added some documentation.

2004-06-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/objectbase.cc: Spring cleaning.
	* glib/glibmm/object.cc: ditto.

2.4.3:

2004-06-18  Daniel Elstner  <daniel.elstner@gmx.net>

	* scripts/macros.m4 (GTKMM_ARG_ENABLE_WARNINGS): Add
	-Wno-long-long to the list of tried warning flags.

2004-06-16  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/dispatcher.cc (DispatchNotifier::create_pipe): There
	is no point in calling g_file_error_from_errno() on win32 since we
	have no real errno.  Also fix the error text to say "event" rather
	than "pipe".

2004-06-14  Daniel Elstner  <daniel.elstner@gmx.net>

	* scripts/cxx.m4: Add a couple of casts to void in order to suppress
	warnings about unused variables.  I still have no idea as to why the
	hardcore warning flags are remembered when running make distcheck...

2004-06-14  Daniel Elstner  <daniel.elstner@gmx.net>

	* examples/thread/dispatcher.cc: Explicitely join all threads.
	Hopefully that'll fix the crash on win32 (see bug #109966).

2004-06-13  Daniel Elstner  <daniel.elstner@gmx.net>

	* examples/thread/dispatcher*.cc (main): Remove unused parameter
	names to fix building with -Werror.

2004-06-13  Daniel Elstner  <daniel.elstner@gmx.net>

	* configure.in (GTKMM_ENABLE_DEBUG_REFCOUNTING): s/^GTK/GLIB/

2004-06-08  Daniel Elstner  <daniel.elstner@gmx.net>

	* build_shared/Makefile_build.am_fragment (all_includes): Remove
	left-over include paths for pango, atk, gdk and gtk.

2004-06-07  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/stringutils.h: Replace a couple of double quotes with
	&quot; to prevent doxygen from escaping the enclosed HTML entities.

2004-06-04  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/ustring.h: Use /*! instead of /** to introduce
	doxygen comments in order to avoid cluttering the long method list
	of class Glib::ustring.  Replace a few double quotes with &quot;
	to prevent doxygen from escaping the enclosed HTML entities.

2.4.2:

2004-06-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* scripts/Makefile.am (EXTRA_DIST): Remove mkinstalldirs, because
	automake-1.8 doesn't use it anymore and prior versions should pick
	it up automatically anyway.

2004-06-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/dispatcher.cc: Complete overhaul of the Win32
	implementation of Glib::Dispatcher.  That is, mutex locking is
	done correctly now and dynamic memory allocation is no longer
	used, plus a few other cleanups.  See reopened bug #109966.

2004-06-03  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/signalproxy_connectionnode.cc
	(SignalProxyConnectionNode::SignalProxyConnectionNode):
	Reorder the initializer list to match the declaration order.

	(SignalProxyConnectionNode::notify): Add missing return 0.

2004-05-26  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/ustring.{cc,h}: Globally apply some minor code
	cleanup and optimization tweaks.

	(get_unichar_from_std_iterator): Replace implementation with a
	hand-optimized and profiled variant that has been lurking in my
	local tree for quite some time, thus should be well tested.
	Also add the G_GNUC_PURE() attribute.

	(operator+): Explicitely instantiate and return a temporary string,
	instead of accessing the reference ustring::operator+=() returns.
	This quite often allows the compiler to eliminate the additional
	copy constructor invocation.

2004-05-25  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, Makefile.am: Removed the glibmm.spec files, because
	it is broken and nobody has volunteered to fix it.

2004-05-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* examples/thread/dispatcher.cc: Revert last commit because it's
	silly.  To make the code truly exception-safe it would be necessary
	to either join all threads or to notify them, which is way beyond
	the scope of this example.

2004-05-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* examples/thread/dispatcher.cc: Set a good example and
	be paranoid about possible memory leaks due to exeptions.

2004-05-20  Daniel Elstner  <daniel.elstner@gmx.net>

	* examples/thread/dispatcher.cc: Code cleanup.  Most importantly,
	get rid of the locking around std::cout since it obfuscates the
	purpose of using Glib::Dispatcher.

2004-05-13  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/object.{cc,h} (ConstructParams::ConstructParams):
	Implement the copy constructor in a way that actually works if used.
	Relying on the compiler to optimize it away is a bad idea. (#132300)

2004-05-04  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/ustring.h: Documented the constructors, based on
	the libstdc++ documentation, to make it clear that sizes are in 
	characters rather than bytes.

2004-05-01  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Increase glib dependency to 2.4.0.

2004-04-30  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/gobject.m4: Allow use of _CUSTOM_DTOR(), needed by
	Gnome::Gda::Connection.

2.4.1:

2004-04-17  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/Makefile.am: Make the generated html depend on the
	beautify_docs.pl.in source instead of the generated beautify_docs.pl,
	so that the html is not rebuilt from tarballs.

2004-04-17  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/container_handle.h: Reimplemented more of the 
	to_cpp_type() methods without using dependent methods, so that they 
	work with g++ 3.4 (cvs versions).

2.4.0:

2004-04-11  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/WrapParser.pm, Output.pm, m4/signal.m4: Allow _WRAP_SIGNAL()
	to take an refreturn argument, so that Gtk::Widget::on_get_accessible()
	can do an extra ref before returning the Atk::Object. 

2004-04-09  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/Output.pm: output_wrap_property(): Provide the actual
	property name as well as one with - replace with _, so we can 
	test for the correct value in notification signal handler.
	* tools/m4/property.m4: Use the actual property name when calling
	C functions.

2.3.8:

2004-03-24  Murray Cumming  <murrayc@murrayc.com>

	* scripts/cxx.m4: Corrected parentheses, which cause the docs to be 
	written into config.h. Thanks to Alexander Nedotsukov.

2004-03-23  Murray Cumming  <murrayc@murrayc.com>

	* scripts/cxx.m4: Corrected the ambiguous const template test, which
	failed on all platforms because it generated bad code.

2004-03-20  Martin Schulze  <mschulze@cvs.gnome.org>

	* glibmm/main.cc: Bug fix in SourceConnectionNode::notify() (#137030).

2004-03-18  Murray Cumming  <murrayc@murrayc.com>
 
 	* tools/generate_wrap_init.pl: Change a regex so that files are
 	included without full path. Apparently this helps when building outside
 	of the source directory, though I'm sceptical. By Victor Zverovich in 
 	bug #137530.

2.3.7:

2004-03-14  Murray Cumming  <murrayc@murrayc.com>
                                                                         
        * scripts/sun.m4: Set the correct variable, so it is actually set in 
	glibmmconfig.

2004-03-14  Murray Cumming  <murrayc@murrayc.com>                                                                                       
        * glib/glibmm/containerhandle_shared.h value.h: Used ifdef 
        GLIBMM_HAVE_DISAMBIGUOUS_CONST_TEMPLATE_SPECIALIZATIONS to avoid 
	problems with the SUN Forte compiler.

2004-03-14  Murray Cumming  <murrayc@murrayc.com>

	* scripts/cxx.m4: Added CAN_DISAMBIGUATE_CONST_TEMPLATE_SPECIALIZATIONS
	m4 macro to use in configure.in, to check for the SUN Forte problem -
	see the comments in cxx.m4.
	* scripts/sun.m4: Moved some brackets around to make the define
	actually work.

2004-03-13  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/containerhandle_shared.h: TypeTraits to_cpp_type() 
	specializations: Use wrap_auto() directly instead of a specific
	wrap() overload that would be dependent. Needed for g++ 3.4.
	* glib/glibmm/containers.h: Same again.

2004-03-13  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_shared.m4: Remove the parent get_type() call from
	the Class::init() function, because it is optimised away, and g++ 3.4
	actually complains that it does nothing.
	* glib/glibmm/object.[h|cc]: Add a public ConstructParams copy 
	constructor, needed by g++ 3.4. See comments in the code.
	* tests/glibmm_value/glibmm_value.cc: Instantiate instances of 
	value types, to fix the g++ 3.4 build. I don't know what the code
	was meant to do before anyway.

2004-03-11  Murray Cumming  <murrayc@murrayc.com>

	* scripts/: Added sun.m4, copied from libsigc++-1.2/scripts and 
	modified, so we can detect the SUN Forte compiler.
	* configure.in: Used the m4 macro.
	* glibmm/glibmm-config.h: Undef the GLIBMM_COMPILER_SUN_FORTE macro
	so that it will be defined if configure sets it.

2004-03-09  Murray Cumming  <murrayc@murrayc.com>
 
 	* Some, but not all, SUN Forte build fixes: 
 	* tools/m4/convert_gdk.m4, convert_glib.m4: Use existing
 	sun-specific conversion when converting from any 
 	RefPtr<const Something> to *Something.

2004-04-08  Hagen Moebius  <hagen.moebius@starschiffchen.de>

        * tools/pm/DocsParser.pm: Another change to give better warnings and
        errors at gmmproc-runtime. Further improvment of parsing parameter names
        to strip traling underscres. This not only for reference text, but for
        the parameter list also.

2004-04-07  Hagen Moebius  <hagen.moebius@starschiffchen.de>

	* tools/pm/DocsParser.pm: Allow overrides to only override
	part of the docs. Add a <mapping> tag to associate non-prefixed
	functions with classes. Improve parsing of parameter names so they
	can now have numbers in the names.

2.3.6:

2004-03-03  Murray Cumming  <murrayc@murrayc.com>

	* Added glib/glibmm/i18n.h and i18n-lib.h which defines _() and friends
	for internationalization. See the comments in the header - you must
	include things in the right order.
	* glib/src/spawn.[hg|ccg]: Added spawn_close_id() as wrapper for
	g_spawn_close_id().
	* glib/glibmm/main.[h|cc]: Added MainLoop::depth() as wrapper for
	g_main_depth().

 2004-03-02  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/Function.pm: parse_param(): Only parse const as an 
	individual part of the type name if it is followed by a space, so 
	that we can have const const_iterator& types.

2004-02-27  Martin Schulze  <teebaum@cvs.gnome.org>

  * CHANGES: Fix typo reported by Chris Vine.

2004-02-13  Martin Schulze  <teebaum@cvs.gnome.org>

	* documentation fixes and corrections in the comments reflecting
	the shift to libsigc++ 2.
	* make all source files in example thread use libsigc++ 2 instead
	of libsigc++ 1.2.

2.3.5:

2004-02-10  Murray Cumming  <murrayc@usa.net>

	* glibmm now uses libsigc++ 2 instead of libsigc++ 1.2. See bug
	#125061 for more details. We must update CHANGES later.

2.3.4:

2004-02-02  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/containerhandle_shared.h: Traits<const T*>: Added
	const_cast, needed by TreeView::get_columns() const: bug #126721.

2004-01-29  Murray Cumming  <murrayc@usa.net>

	* tools/pm/Parser.pm, Output.pm, tools/m4/signal.m4: Add an optional
	custom_c_callback parameter to _WRAP_SIGNAL to allow special code
	for the SelectionData& output parameter in Gtk::Widget signals.
	Hopefully we won't need too many more of these hacks - the m4 is 
	becoming very hard to read, with all these nested ifelse() statements.

2004-01-27  Cedric Gustin  <cedric.gustin@swing.be>

	* build_shared/Makefile_build.am_fragment: Added win32-specific
	--export-all-symbols to linker flags. This is backported from 
	gtkmm-2.2.
	* README.win32: Updated text for glibmm-2.4. 
	* tools/generate_wrap_init.pl.in: Replaced GTKMM_WIN32 by the 
	standard G_OS_WIN32.

2.3.3:

2004-01-22  Murray Cumming  <murrayc@usa.net>

	* glib/date.[hg|ccg]: Added clamp_min() and clamp_max() to wrap the
	case where g_date_clamp() takes null values.

2004-01-18  Alberto Paro  <alberto@paro.homeunxi.org>

	* glib/src/date.hg: documentated Glib::Date functions.
	* glib/glibmm/main.h: documentated Glib::MainLoop,Glib::MainContext
	and Glib::Source  functions.

2004-01-18  Murray Cumming  <murrayc@usa.net>

	* tools/pm/Output.pm, tools/m4/property.m4: When the property is not
	read-only, add a second read-only propertyproxy for the same property,
	with a const accessor. This allows setting of properties in const
	methods. Make all read-only propertyproxies have const accessors.
	* glib/glibmm/propertyproxy.h: Added class documentation.
	* tools/pm/Output.pm: Declare _vfuncs as virtual methods - fixing
	an error in my last change.

2004-01-16  Murray Cumming  <murrayc@usa.net>

	* tools/pm/Output.pm, tools/m4/vfunc.m4:
	- Generate const vfuncs when requested with _WRAP_VFUNC().
	- Put the *_vfunc() decleraration directly into the header, where 
	the _WRAP_VFUNC() macro appears, instead of in a separate section.
	This allows us to add doxygen documentation before the _WRAP_VFUNC()
	in the .hg file. However, we must check that all of our _WRAP_VFUNC()
	macros are in protected: sections.

2004-01-12  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/object.cc: Object::Object() default constructor. 
	Remove the warning because we really need this to implement a custom
	TreeModel. Derive a new GType, as in the 
	Object::Object(ConstructParams) constructor. Like that constructor, 
	the default one also assumes that you have called a suitable 
	ObjectBase constructor, such as ObejctBase(typeid(MyCustomClass)).

2004-01-09  Murray Cumming  <murrayc@usa.net>

	* tools/pm/Output.pm: output_wrap_property(): Allow construct-only
	properties to be wrapped, as read-only properties.

2004-01-03  Murray Cumming  <murrayc@usa.net>

	* tools/gmmproc.in, pm/WrapParser.pm, DocsParser.pm: Removed the 
	mergecdocs option - because we always want to merge C docs, to avoid
	accidental upload of half-complete docs.

2003-12-29  Murray Cumming  <murrayc@usa.net>

	* Makefile.am: Add scripts and tests directories to SUBDIRS instead of 
	DIST_SUBDIRS, so that their Makefile.am files are actually used.
	* scripts/macros.m4: renamed GTKMM_CHECK_PERL() to GLIBMM_CHECK_PERL()
	and install it as glibmm_check_perl.m4, so that other *mm projects
	can use it. They need the PERL_PATH for Doxygen.

2003-12-22  Murray Cumming  <murrayc@usa.net>

	* docs/reference: generate beautify_docs.pl from beautify_docs.pl.in,
	so it can have the perl path in it. Install it, so other *mm 
	modules can use it.

2003-12-13  Murray Cumming  <murrayc@usa.net>

	* tools/m4/*.m4: Added fuller Doxygen documentation to all gobj() and 
	wrap() methods. Doxygen should not emit warnings about these now.

2.3.2:

2003-11-29  Murray Cumming  <murrayc@usa.net>

	* tools/m4/signal.m4: Add spaces inside signal_proxy template types,
	to avoid << and >> when using templated types.

2003-11-27  Murray Cumming  <murrayc@usa.net>

	* tools/pm/WrapParser.pm, Output.pm: Added WRAP_METHOD_DOCS_ONLY()
	macro.
	* docs/internal/using_gmmproc.txt: Explained the new macro.
	
2003-11-02  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/: Added init.[h|cc] with Glib::init() so that the 
	gnomemm init() methods do not need to initialize gtkmm.
	* tools/m4/class_gobject.m4, class_gtkobject.m4: Added 
	_GMMPROC_PROTECTED_GCLASS macro, needed by libgnomecanvasmm. This
	was not previously properly merged from gtkmm2.
	* tools/m4/property.m4: Re-added PropertyProxy reference documentation
	that did not survive a previous merge from gtkmm2.

2003-11-01  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/propertyproxy.h, propertyproxy_base.[h|cc]: Now uses
	ObjectBase instead of Object, because glib can now have properties
	on interfaces. This is needed, for instance, by the GtkFileChooser
	interface wrapper in gtkmm.
	* glib/glibmm/object.h: Moved get/set_property() methods into 
	ObjectBase, for the same reason.
	* tools/pm/WrapParser.pm, Output.pm: Added optional no_default_handler
	parameter to gmmproc _WRAP_SIGNAL() macro, for signals whose 
	default signal handler is not in the klass struct and therefore
	can not be overridden.

2003-10-31  Murray Cumming  <murrayc@usa.net>

	* docs/Makefile_web.am_fragment: Corrected install location,
	so that links from the gtkmm docs work when they are installed.

2003-10-30  Murray Cumming  <murrayc@usa.net>

	* docs: Added images directory, copied from gtkmm, for the reference
	html docs.
	* configure.in: Mention docs/images/Makefile.
	* docs/reference/Doxyfile.in: Genereate glibmm_doxygen_tags instead
	of gtkmm_doxygen_tags.
	* docs/reference/Makefile.am: dist glibmm_doxygen_tags.
	* docs/reference: gtkmm*.html_fragment are now glibmm*.html_fragment.

2.3.1:
	
2003-10-23  Murray Cumming  <murrayc@usa.net>

	* tools/pm/Output.pm: output_wrap_create(): Used
	args_types_and_names_with_default_values() intead of 
	args_types_and_names(), so that create() functions .in .h files have 
	the default values as specified in _WRAP_CREATE() in .hg files.
	* tools/pm/WrapParser.pm: on_ignore_signals(): Strip the quotes, to
  make _IGNORE_SIGNAL() really work in .hg files.

2003-10-02  J. Abelardo Gutierrez <jabelardo@cantv.net>

	* examples/threads/dispatcher.cc
	  examples/threads/dispatcher2.cc: fixed to cast out all gktmm code,
	now they only need glimm.
	* configure.in: Added examples/threads because they don't use gtkmm
	anymore.  Now all examples/threads compiles and run just fine.

2.3.0:

2003-09-30  Murray Cumming  <murrayc@usa.net>

	* configure.in: Removed examples/threads because we don't build or
	distribute it, because it doesn't build, because it uses gtkmm.

2003-09-30  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/object_base.h: ObjectBase inherits virtually from
	Sigc::Object. See bug #116280.

2003-09-27  Cedric Gustin  <cedric.gustin@swing.be>
 
 	* glib/glibmm/threadpool.cc: Removed
 	_GTKMMPROC_SIGNAL_H_AND_CC(#ifndef G_OS_WIN32) restrictions. These
 	functions are now implemented in the latest (2.2.4) GTK+ on win32.
 	* README.win32 : Updated list of unsupported functions. 
 
2003-08-20  Frank Naumann  <fnaumann@freemint.de>
  
  	* glib/src/thread.hg,
  	  glib/src/unicode.hg: Warning bugfix for VisualStudio .NET 2003;
  	made wrapper functions returning bool from glib functions
  	returning int (C lacks builtin type bool) explicit by adding 
  	an != 0 check. Otherwise VisualStudio .NET warn about implicit
  	int -> bool cast. 

2003-07-26  Murray Cumming  <murrayc@usa.net>
 
 	* glib/glibmm/dispatcher.cc: Added #include <algorithm>, needed
 	by MSVC++, as suggested by Frank Naumann in bug #118215.

2003-05-31  Murray Cumming  <murrayc@usa.net>

	* tools/gmmproc.in: Corrected location of installed .pm files. They
	are now in a glibmm-2.3 folder instead of a glibmm-2.4 folder.

2003-05-14  Murray Cumming  <murrayc@usa.net>

	* Applied some of MSVC++ .NET 2003 changes from jburris. For instance,
	use of Gtk:: prefix with manage, because MSVC++ can not guess it. Also
	corrected the out-of-sync protected/private modifiers in the private
	gtype classes and their prototypes.

2003-05-09  Cedric Gustin  <cedric.gustin@swing.be>

        * glib/glibmm/dispatcher.cc: small typo in G_OS_WIN32 condition.
	
2003-05-07  Murray Cumming  <murrayc@usa.net>

	* scripts/macros.m4: Made the --enable-debug-refcounting configure
	option set GLIBMM_* instead of GTKMM_*.

2003-05-02  Murray Cumming  <murrayc@usa.net>
 
 	* tools/m4/*.m4: Added doxygen comments to gobj() methods.
 	* examples/markup/parser.cc: Commented-out a std::right that gcc 2.93
 	does not like.

2003-04-23  Andrew Makeev
 
	* glib/glibmm/dispatcher.cc: Added some #ifdefed code to implement
 	Glib::Dispatcher on WIN32. See comments with the code.

2003-04-22  Murray Cumming  <murrayc@usa.net>

	* Install headers in a glibmm-2.3 directory instead of glibmm-2.4,
	to be consistent with gtkmm 2.4.

2003-04-21  Murray Cumming  <murrayc@usa.net>

	* arrayhandle.h, listhandle, slisthandle.h:
	Glib::ListHandle, Glib::ListHandle, Glib::SListHandle: Added 
	reference docs explaining that people can use STL containers.
	
2003-04-21  Murray Cumming  <murrayc@usa.net>

	* Removed examples/idle: It's now updated and in gtkmm/examples/book.

2003-04-19  Murray Cumming  <murrayc@usa.net>

	* tools/pm/GtkDefs.pm: get_unwrapped(): Changed some & to && to 
	avoid warnings and because that is probably what they should be.

	* tools/m4/extra_defs_gen/generate_defs_glib.cc: Removed parameter
	names from main(), because they are not used. Avoid warning.

2003-03-26  Ross Burton  <ross@burtonini.com>

	* glib/src/module.hg: Added API documentation.

2003-03-18  Enrico Scholz  <enrico.scholz@informatik.tu-chemnitz.de>
	
	* scripts/*.m4, configure.in:
          Added description to several AC_DEFINE statements to make 'autoheader'
          happy
        * Makefile.am:
          Added ACLOCAL_AMFLAGS to make 'autoreconf' work
	
2003-03-18  Cedric Gustin  <cgustin@ibelgique.com>
 
  	* Makefile.am : removed examples from DIST_SUBDIRS

2003-03-18  Enrico Scholz  <enrico.scholz@informatik.tu-chemnitz.de>

	* examples/Makefile.am_fragment:  Added DESTDIR-support.
	
2003-03-14  Cedric Gustin  <cgustin@ibelgique.com>

	* Install examples. The are built by default too. Patch adapted for
	glibmm 2.4 by Murray Cumming.

2003-03-04  Cedric Gustin  <cgustin@ibelgique.com>

 	* configure.in : Removed libstdc++ in LDFLAGS on win32. Latest
 	libtool is taking care of it.
	* build_shared/Makefile_build.am_fragment,
	tools/extra_defs_gen/Makefile.am : Added
	--export-all-symbols linker flag on win32 (required by latest
 	libtool to build DLLs).
 	* build_shared/Makefile_gensrc.am_fragment : Modifiy rule that
 	builds wrap_init.cc. wrap_init.cc now contains reference to all
 	objects, event on win32. #ifdefs are included when needed.
	* README.win32 : updated for version 2.2. Added list of missing
 	methods and signals on win32
	* tools/m4/base.m4 : Added _GTKMMPROC_SIGNAL_H_AND_CC macro.
	

2003-03-14  Martin Schulze  <MHL.Schulze@t-online.de>

	* docs/internal/using_gtkmmproc.txt: Correct name of
	[...]signals.defs generation utiliy.

2003-01-30  Rick L Vinyard Jr <rvinyard@cs.nmsu.edu>

	* glib/src/thread.hg Cond: Add documentation

2003-01-27  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/refptr.h: Removed RefPtr<>::is_null() to encourage use
	of more pointer-like operator bool() instead. Wanted to remove clear()
	too, but there is no =0 equivalent yet.
	* tools/gmmproc.in: Change harcoded gtkmm-2.0/m4 path to glibmm-2.4/m4.

2003-01-22  Murray Cumming  <murrayc@usa.net>

	* GTKMM_ m4 tests and #defines are now prefixed with GLIBMM_

2003-01-21  Murray Cumming  <murrayc@usa.net>

	* tests/Makefile.am_fragment, examples/Makefile.am_fragment: 
	Corrected LIBS and CFLAGS. Not all of these build because they
	use gtkmm stuff too. They need to be reduced to glibmm-only code.

2003-01-21  Murray Cumming <murrayc@usa.net>

	* glib/Makefile.am, glib/glibmm/Makefile.am: Install headers in
	glibmm-2.4 directory rather than gtkmm-2.4

2003-01-21  Murray Cumming  <murrayc@usa.net>

	* configure.in: Use GLIBMM_* instead of GTKMM_* to avoid config.h 
	clashes with gtkmm 2.4.
	* glib/glibmm-2.4.pc.in: Correct cflags - report 2.4 instead of 2.0.

2003-01-21  Murray Cumming  <murrayc@usa.net>

	* tools/extra_defs_gen/Makefile.am: Changed extra_defs library name
	from 2.4 to 2.3, so it can be unstable.

2003-01-09  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/utility.h (GLIBMM_INITIALIZE_STRUCT): Replace
	__builtin_bzero() with __builtin_memset() because the former is
	deprecated.  Also, it looks like GCC is able to optimize the 0 case
	so we don't lose anything here.

2003-01-09  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/miscutils.cc (Glib::build_path): Reserve 256 bytes
	in advance to improve performance.

2003-01-09  Daniel Elstner  <daniel.elstner@gmx.net>

	* glib/glibmm/miscutils.{cc,h} (Glib::build_path): Fix to make it
	behave exactly like g_build_path().  (#102885, Jarek Dukat)

	(Glib::build_filename(const std::string&, const std::string&)):
	Implement in terms of Glib::build_path().
	
2003-01-21  Murray Cumming  <murrayc@usa.net>

	* Renamed gtkmmproc to gmmproc.

2003-01-08  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/refptr.h: Removed the operator=(CppObject*), as
	suggested in the TODO comment.

2003-01-08  Murray Cumming  <murrayc@usa.net>

	* make distcheck works.

2003-01-08  Murray Cumming  <murrayc@usa.net>

	* It now builds, though I haven' tried installing it. The
	library names and header directories should now all have 2.4
	instead of 2.0 in their name.

glibmm was previously part of gtkmm2.

