// -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 2 -*-

/* Copyright (C) 2007 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <giomm/inputstream.h>
#include <giomm/seekable.h>

_DEFS(giomm,gio)
_PINCLUDE(giomm/private/inputstream_p.h)

namespace Gio
{

/** MemoryInputStream implements InputStream for arbitrary memory chunks.
 *
 * @ingroup Streams
 *
 * @newin2p16
 */
class MemoryInputStream 
: public Gio::InputStream, 
  public Seekable
{
  _CLASS_GOBJECT(MemoryInputStream, GMemoryInputStream, G_MEMORY_INPUT_STREAM, Gio::InputStream, GInputStream)
  _IMPLEMENTS_INTERFACE(Seekable)

protected:
  _CTOR_DEFAULT
  // TODO: *_new_from_data constructor needs to be fixed?

public:
  _WRAP_CREATE()

  /** Appends to data that can be read from the input stream.
   *
   * @param data Input data.
   */
  void add_data(const std::string& data);

  /** Appends to data that can be read from the input stream.
   *
   * @param data Input data.
   * @param len Length of the data, may be -1 if data is a null-terminated string.
   */
  void add_data(const void* data, gssize len);
};

} // namespace Gio

