#!/usr/bin/env python
from waflib.extras import autowaf as autowaf
from waflib import Options
import os
import sys
import re

# Mandatory variables
top = '.'
out = 'build'

def options(opt):
    autowaf.set_options(opt)

def sub_config_and_use(conf, name, has_objects = True):
    conf.recurse(name)
    autowaf.set_local_lib(conf, name, has_objects)

def configure(conf):
    autowaf.set_recursive()
    autowaf.configure(conf)

    backends = [ 'jack' ]

    if sys.platform == 'darwin' or sys.platform == 'mingw' or sys.platform == 'msvc':
        backends += [ 'wavesaudio' ]

    if Options.options.build_dummy: 
        backends += [ 'dummy' ]

    if Options.options.build_alsabackend:
        if re.search ("linux", sys.platform) != None:
            backends += [ 'alsa' ]

    for i in backends:
        sub_config_and_use(conf, i)

def build(bld):
    backends = [ 'jack' ]

    if sys.platform == 'darwin' or sys.platform == 'mingw' or sys.platform == 'msvc':
        backends += [ 'wavesaudio' ]

    if bld.env['BUILD_DUMMYBACKEND']:
        backends += [ 'dummy' ]

    if re.search ("linux", sys.platform) != None:
        if bld.env['BUILD_ALSABACKEND'] and bld.is_defined('HAVE_ALSA'):
            backends += [ 'alsa' ]

    for i in backends:
        bld.recurse(i)
